var fit20;function $t(e){return e}function isUndefined(e){return void 0===e||null==e}function isDefined(e){return!isUndefined(e)}function isEmpty(e){return void 0===e||null==e||("string"==typeof e||Array.isArray(e)?0==e.length:0==Object.keys(e).length)}function isObject(e){return e===Object(e)}function deepClone(e,t){return Array.isArray(e)?e.map((function(e){return deepClone(e)})):isEmpty(t)?jQuery.extend(!0,{},e):jQuery.extend(!0,jQuery.extend(!0,{},e),t)}function onlyDefined(e){if(Array.isArray(e))return e.filter((function(e){return isDefined(e)}));var t={};return Object.entries(e).forEach((function(e){isDefined(e[1])&&(t[e[0]]=e[1])})),t}function isPrimitive(e){return e!==Object(e)}function isNumber(e){return!isNaN(parseFloat(e))&&isFinite(e)}function id0(e){return e?e.id:0}function mapById(e){var t={};return e.forEach((function(e){t[e.id]=e})),t}function range(e){return Array.apply(null,Array(e)).map((function(e,t){return t}))}function extent(e){return e.reduce(((e,t)=>t<e[0]?[t,e[1]]:t>e[1]?[e[0],t]:e),[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY])}function shallowStringify(e){var t=0;return isUndefined(e)?""+e:JSON.stringify(e,(function(e,i){return""===e?Array.isArray(i)?i.slice(0,5):i:++t<5?"\0":5==t?"\0 \0":void 0})).replace(/\"\\u0000\"/g,"•").replace(/\"\\u0000 \\u0000\"/g,"•••")}function shortStringify(e){return JSON.stringify(e,(function(e,t){return isDefined(t)&&isPrimitive(t)&&t.toString().length>16?t.toString().substring(0,15)+"•••":t}))}function stringify(e){return"string"==typeof e?e:JSON.stringify(e)}function diffObjects(e,t,i){return i=i?i+": ":"",void 0===e?void 0===t?"":`${i}undefined != ${JSON.stringify(t)}`:void 0===t?`${i}${JSON.stringify(e)} != undefined`:null==e?null==t?"":`${i}null != non-null ${JSON.stringify(t)}`:null==t?`${i}non-null ${JSON.stringify(e)} != null`:typeof e!=typeof t?`${i}${typeof e} ${JSON.stringify(e)} != ${typeof t} ${JSON.stringify(t)}`:"string"==typeof e?e==t?"":`${i}"${e}" != "${t}"`:isPrimitive(e)?e==t?"":`${i}${e} != ${t}`:Array.isArray(e)?range(Math.max(e.length,t.length)).map((function(n){return diffObjects(e[n],t[n],i+n)})).join("\n"):isObject(e)?Array.from(new Set(Object.keys(e).concat(Object.keys(t)))).map((function(n){return diffObjects(e[n],t[n],i+n)})).join("\n"):"???"}function reversed(e){return isEmpty(e)?[]:e.slice().reverse()}function sorted(e,t){return isEmpty(e)?[]:e.slice().sort(t)}function sortedIndexes(e,t){return t=t||function(e,t){return e<=t?-1:1},(e=e||[]).map((function(e,t){return[e,t]})).sort((function(e,i){return t(e[0],i[0])})).map((function(e){return e[1]}))}function sortedPersons(e,t){return e?t?e.sort((function(e,t){return(e.lastName||"").localeCompare(t.lastName||"")||(e.firstName||"").localeCompare(t.firstName||"")})):e.sort((function(e,t){return(e.firstName||"").localeCompare(t.firstName||"")||(e.lastName||"").localeCompare(t.lastName||"")})):[]}function sortedStudios(e){return e?e.sort((function(e,t){return(e.name||"").localeCompare(t.name||"")||(e.subName||"").localeCompare(t.subName||"")})):[]}function permutate(e,t){return t.map((function(t){return e[t]}))}function unique(e){var t={};return(e=e||[]).forEach((function(e){t[e+"::"+typeof e]=e})),Object.keys(t).map((function(e){return t[e]}))}function arraysAsSetsEq(e,t){var i=unique(e),n=unique(t);return i.length==n.length&&i.every((function(e){return n.indexOf(e)>=0}))}function arraysHaveSameIds(e,t){return t=t||[],arraysAsSetsEq((e=e||[]).map((function(e){return e.id})),t.map((function(e){return e.id})))}function inputDate(e){return"Date"!=typeof e&&(e=new Date(e)),dateFormat(e,"yyyy-mm-dd")}function shortDate(e){return"Date"!=typeof e&&(e=new Date(e)),dateFormat(e,$t("L1002"))}function longDate(e){return"Date"!=typeof e&&(e=new Date(e)),dateFormat(e,$t("L1001"))}function getWeek(e){(e=new Date(e)).setHours(0,0,0,0),e.setDate(e.getDate()+3-(e.getDay()+6)%7);var t=new Date(e.getFullYear(),0,4);return 1+Math.round(((e.getTime()-t.getTime())/864e5-3+(t.getDay()+6)%7)/7)}function sameDate(e,t){return"Date"!=typeof e&&(e=new Date(e)),"Date"!=typeof t&&(t=new Date(t)),e.getFullYear()===t.getFullYear()&&e.getMonth()===t.getMonth()&&e.getDate()===t.getDate()}function dateAdd(e,t,i,n){return new Date(e.getFullYear()+t,e.getMonth()+i,e.getDate()+n)}function showTime(e){var t=e<0?"-":"",i=(e=Math.abs(e))%60;return`${t}${Math.trunc(e/60)}:${"0".substring(i>=10)}${i}`}function memberIconClasses(e){return e.duoPartner?"ACTIVE"==e.memberStatus?["fas fa-user-friends",e.active?"text-primary":"text-secondary"]:"PROSPECT"==e.memberStatus?["far fa-user-friends",e.active?"text-primary":"text-secondary"]:"ONHOLD"==e.memberStatus?["fas fa-user-clock","text-secondary"]:"INACTIVE"==e.memberStatus?["fas fa-user-times","text-secondary"]:"WITHDRAWN"==e.memberStatus?["far fa-user-times","text-secondary"]:"ANONYMIZED"==e.memberStatus?["fal fa-user-slash","text-secondary"]:["fas fa-user-friends",e.active?"text-primary":"text-secondary"]:"ACTIVE"==e.memberStatus?["fas fa-user",e.active?"text-primary":"text-secondary"]:"PROSPECT"==e.memberStatus?["far fa-user",e.active?"text-primary":"text-secondary"]:"ONHOLD"==e.memberStatus?["fas fa-user-clock","text-secondary"]:"INACTIVE"==e.memberStatus?["fas fa-user-times","text-secondary"]:"WITHDRAWN"==e.memberStatus?["far fa-user-times","text-secondary"]:"ANONYMIZED"==e.memberStatus?["fal fa-user-slash","text-secondary"]:["fas fa-user-astronaut",e.active?"text-primary":"text-secondary"]}function getBackgroundColorForClass(e){var t=$(`<div class="${e} d-none"/>`).appendTo($("body"));return window.getComputedStyle(t[0],null).getPropertyValue("background-color").match(/rgb\((\d+), (\d+), (\d+)\)/).slice(1)}function mixColors(e){var t=e.reduce((function(e,t){return[e[0]+t[0][0]*t[1],e[1]+t[0][1]*t[1],e[2]+t[0][2]*t[1],e[3]+t[1]]}),[0,0,0,0]);return[Math.round(t[0]/t[3]),Math.round(t[1]/t[3]),Math.round(t[2]/t[3])]}function getThemeColors(){return{primary:getBackgroundColorForClass("bg-primary"),secondary:getBackgroundColorForClass("bg-secondary"),success:getBackgroundColorForClass("bg-success"),warning:getBackgroundColorForClass("bg-warning"),danger:getBackgroundColorForClass("bg-danger"),info:getBackgroundColorForClass("bg-info")}}(fit20=fit20||{}).app=fit20.app||{},fit20.app.client_ids={"fit20app-4.appspot.com":"375749707461-neov2u05j5vb1d4ffmiltqkt9nmuhunj.apps.googleusercontent.com","fit20app-4-moduletest.appspot.com":"710561100292-n7equt3pbmfsrl2nb54k26ijkhhlc68i.apps.googleusercontent.com","apptest.fit20app.com":"710561100292-n7equt3pbmfsrl2nb54k26ijkhhlc68i.apps.googleusercontent.com","fit20app-4-acctest.appspot.com":"103079258064-7qgliijq6gr03r6jhq87on3vhnq5uaep.apps.googleusercontent.com","fit20app-4-module.appspot.com":"456985267766-vij4mo8uqfjp2fum8vmm19ud6rcf24dg.apps.googleusercontent.com",localhost:"710561100292-n7equt3pbmfsrl2nb54k26ijkhhlc68i.apps.googleusercontent.com"},fit20.app.signedIn=function(){return gapi.auth2.getAuthInstance().isSignedIn.get()},fit20.app.apiLoaded=function(){return void 0!==gapi.client.fit20&&void 0!==gapi.client.fit20},fit20.app.hasAPI=function(){return fit20.app.signedIn()&&fit20.app.apiLoaded()},fit20.app.getDiscoveryDoc=function(){if(void 0===fit20.app.host)throw"Host is not known, cannot get API discovery doc.";return fit20.app.apiRoot+"/discovery/v1/apis/fit20/v1/rest"},fit20.app.userInfo=fit20.app.userInfo||{},fit20.app.updateUserInfo=function(){return new Promise((function(e,t){if(fit20.app.signedIn()&&fit20.app.apiLoaded())try{fit20.log("> Requesting user info."),gapi.client.fit20.getUserInfo().execute((function(i){if(i.code)fit20.log("!! Error "+i.code+" in getUserInfo: "+$t(i.message)),fit20.app.signin(!0).then((function(){t&&t(i.message)})).catch((function(){t&&t(i.message)}));else{fit20.log("< Updating user info."),fit20.app.userInfo=i.result;var n=gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();if(fit20.app.userInfo.name=n.getName(),isDefined(fit20.app.userInfo.trainer)&&(fit20.log("* Setting currentTrainer from userInfo, then refreshing"),isDefined(fit20.store.commit)&&isDefined(fit20.get)&&(fit20.store.commit("setCurrentTrainer",fit20.app.userInfo.trainer),fit20.get("currentTrainer",!0))),fit20.app.userInfo.language)fit20.i18n.setLanguage(fit20.app.userInfo.language),fit20.log("* Setting language from userInfo to "+fit20.i18n.getLanguage()+" from "+$t(fit20.app.userInfo.language_of));else{var s=window.navigator.userLanguage||window.navigator.language;fit20.i18n.setLanguage(s.substr(0,2)),fit20.log("* Setting language from browser to "+fit20.i18n.getLanguage())}e&&e()}}))}catch(e){fit20.app.addAlert("error","M9502: "+e+" M9698"),fit20.log(`!! gapi.client.fit20.getUserInfo() threw ${JSON.stringify(e)}`),fit20.app.userInfo={},t&&t()}else fit20.app.signedIn()?fit20.log("! Cannot request user info when the fit20 API is not loaded."):fit20.log("! Cannot request user info when the user is not authenticated."),t&&t()}))},fit20.app.initAuth=function(){return new Promise((function(e,t){fit20.app.host=window.location.host,fit20.app.apiRoot=window.location.protocol+"//"+fit20.app.host+"/_ah/api";var i=fit20.app.host.replace(/.*-dot-/,"").replace(/:\d+$/,"");fit20.log(`* Initializing application, host = ${fit20.app.host} / ${i}`);var n=fit20.app.client_ids[i];if(!n&&i.startsWith("192.168")&&(n=fit20.app.client_ids.localhost),n){var s=function(i){var n=i.currentUser.get().getBasicProfile();fit20.log("< Authenticated as "+n.getEmail()),i.isSignedIn.listen(fit20.app.updateSigninStatus),fit20.log("> Loading fit20 API."),gapi.client.load(fit20.app.getDiscoveryDoc()).then((function(){fit20.log("< Loaded fit20 API."),e&&e()}),(function(e){var i=e.hasOwnProperty("error")?e.error:e;fit20.log("<! Unable to load fit20 API: "+i.message+" ("+i.code+")"),fit20.app.addAlert("error","M9595"),t&&t(i.message)}))};try{fit20.log("> Loading Google APIs."),gapi.load("client:auth2",(function(){fit20.log("< Google APIs loaded."),fit20.log("> Authenticating."),gapi.auth2.init({clientId:n,scope:"profile"}).then((function(e){e.isSignedIn.get()?(fit20.log("* User was already signed in."),s(e)):(fit20.log("! Authenticated, but not signed in."),fit20.app.addAlert("info","Please sign in. If nothing happens, disable your ad-blocker."),e.signIn({prompt:"select_account"}).then((function(t){var i=t&&t.getBasicProfile()&&t.getBasicProfile().getEmail()+" "+t.getBasicProfile().getName();fit20.log(`> Signed in as ${i}`),s(e)}),(function(e){var i=e&&e.hasOwnProperty("error")?e.error:e;fit20.log(`! Unable to authenticate: ${JSON.stringify(i)}`),fit20.clearStores(),t&&t(i)})))}),(function(e){fit20.clearStores();var i=e.error+". "+e.details;fit20.app.addAlert("error","M0109 "+i+" M9698"),fit20.log("!! Unable to authenticate: "+i),t&&t(i)}))}))}catch(e){fit20.log("!! Problem loading Google APIs: "+e),fit20.app.addAlert("error","M9589  M9591"),t&&t(e)}}else t("No client_id is defined for "+i+" ["+fit20.app.host+"]")}))},fit20.app.updateSigninStatus=function(e){e?(fit20.log("* User is signed in, updating user info."),fit20.app.updateUserInfo().then((function(){fit20.reloadStoreItems()}))):(fit20.log("! User is not signed in, clearing storage."),fit20.clearStores()),fit20.app.updateUI("update signin status")},fit20.app.signin=function(e){return!fit20.app.signedIn()||e?(fit20.log("* Doing signin."),gapi.auth2.getAuthInstance().signIn({prompt:"select_account"}).then((function(e){return fit20.log("* Signed in."),e}))):(fit20.log("* Already signed in."),Promise.resolve())},fit20.app.signout=function(){if(fit20.app.signedIn()||fit20.log("* Already signed out."),confirm($t("M0105"))){fit20.log("* Doing signout."),gapi.client.fit20=void 0,fit20.app.hasUI=!1,fit20.clearStores();var e=function(){fit20.log("* Doing disconnect."),gapi.auth2.getAuthInstance().disconnect(),window.location.href="https://www.google.com/accounts/Logout?continue=https://appengine.google.com/_ah/logout?continue="+window.location.href};gapi.auth2.getAuthInstance().signOut().then(e,e)}else fit20.log("* Signout canceled.")},fit20.app.getAccessToken=function(){return gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse(!0).access_token},(fit20=fit20||{}).i18n={languages:[],_translations:{},getTranslations:function(){return fit20.log("> Loading translations"),new Promise((function(e,t){$.ajax("/internationalization.tsv",{success:function(t,i,n){for(var s=t.split(/\r?\n/),r=s[0].split(/\t/),a=1;a<r.length;++a)fit20.i18n._translations[r[a]]={};for(var o=1;o<s.length;++o){var c=s[o].split(/\t/);if(c[0])for(a=1;a<c.length;++a)fit20.i18n._translations[r[a]][c[0]]=c[a]}for(a=1;a<r.length;++a)fit20.i18n.languages.push({code:r[a],name:fit20.i18n._translations[r[a]].L0000});fit20.log(`< Translations loaded. ${r.join(" ")}`),e()},error:function(e,i,n){message="Aplication error, cannot get translations: "+i+" "+n,fit20.log("!! "+message),t(message)}})}))},_language:"",setLanguage:function(e){fit20.log("* Setting language to "+e),fit20.i18n._language=e},getLanguage:function(){return fit20.i18n._language||"en"},translate:function(e,t,i){return t=Object.assign({user:fit20.store&&fit20.store.state&&fit20.store.state.currentTrainer&&fit20.store.state.currentTrainer.fullName||fit20.app.userInfo.name||"???",server:"fit20"},t),i=i||fit20.i18n.getLanguage(),"string"!=typeof(e=e||"")&&(e=JSON.stringify(e),fit20.log("!! Attempt to translate "+e)),isUndefined(fit20.i18n._translations)||isUndefined(fit20.i18n._translations[i])||(e=e.replace(/(\b[LM]|\^)(\d\d\d\d)\b/g,(function(e){return fit20.i18n._translations[i][e]||"<<"+e+">>"})),t&&Object.keys(t).forEach((function(i){e=e.replace("{"+i+"}",t[i])}))),e},machineAdjustableSettings:function(e,t){e=e||fit20.i18n.getLanguage(),t=t||{};var i=Object.entries(fit20.i18n._translations[e]).filter((function(e){return e[0].startsWith("^00")&&(!t.optional||e[0]>="^0002"&&e[0]<"^0080")}));return t.nest&&(i=i.reduce((function(e,t,i,n){return i%2==1&&e.push([n[i-1],t]),e}),[])),i},absentReasons:function(e){return e=e||fit20.i18n.getLanguage(),Object.entries(fit20.i18n._translations[e]).filter((function(e){return e[0].startsWith("^01")}))}},(fit20=fit20||{}).log=function(e){var t=void 0;try{t=arguments.callee.caller.name}catch(e){}var i=new Date,n=i.toLocaleString("nl");e=$t(e,{},"en")+" ("+(t||"?")+" @ "+n+")",fit20.log.messages.push(e),e.startsWith("!!")?(fit20.log.keepMessages.push(e),console.error(e)):e.startsWith("!")?console.warn(e):console.log(e),fit20.log.messages.length>fit20.log.maxNrMessages&&fit20.log.messages.splice(0,fit20.log.messages.length-fit20.log.maxNrMessages)},fit20.log.messages=[],fit20.log.maxNrMessages=300,fit20.log.keepMessages=[],fit20.logServer=function(e,t,i,n){"string"!=typeof e&&(e=JSON.stringify(e)),"string"!=typeof t&&(t=JSON.stringify(t)),i=i||0,n=n||{};var s="Client using "+navigator.userAgent+";\n\niPad trainers app version "+appVersion,r="\n\t-- Errors since start up: --\n\t"+fit20.log.keepMessages.join("\n\t")+"\n\t-- Most recent messages: --\n\t"+fit20.log.messages.join("\n\t");if(gapi&&gapi.client&&gapi.client.fit20){fit20.app.startLoading(!1);var a={text:e,location:t,time:(new Date).toLocaleString("nl"),details:s+(n.details?"\n\n"+n.details:""),request:window.location.href,response:r,screenshot:n.screenshot?n.screenshot:null,level:i};gapi.client.fit20.logMessage(a).execute((function(e){fit20.app.stopLoading(!1)}))}else e.indexOf("popup")>0?alert("Please allow popups from the app in your browser. "+e):alert("The app cannot load, because of a serious problem: "+e)},window.addEventListener("error",(function(e){var t=e.message,i=`Javascript error at [${e.filename}, ${e.lineno}/${e.colno}]`;fit20.log(`!! ${(new Date).toString()} Sending error report to server: ${t} at ${i}`),fit20.logServer(t,i,2)})),fit20.log.vueMessageSeen={},Vue.config.errorHandler=function(e,t,i){var n=e.message;if(!fit20.log.vueMessageSeen[n]){fit20.log.vueMessageSeen[n]=!0;var s=`${JSON.stringify(e)}; Vue info: ${i}`;fit20.log(`!! Vue error [${(new Date).toString()}] ${n} at ${s}`),fit20.logServer(n,s,2)}},fit20.log.show=function(){var e=$('\n    <div id="logDiv" style="height:10em; min-height:15em; overflow:scroll;">\n      <div onclick="$(\'#logDiv\').remove()" style="position: fixed; right: 0; background: red; cursor: pointer;">X</div>\n    </div>\n  ');fit20.log.messages.forEach((function(t){e.append(`<div>${t}</div>`)})),$("#app").append(e),e.scrollTop(e[0].scrollHeight)},fit20.app.alerts=fit20.app.alerts||[],fit20.app.addAlert=function(e,t,i){if(t.match(/^\s*$/),"error"==e&&(e="danger"),["success","info","warning","danger"].indexOf(e)<0&&(e="success"),$t&&(t=$t(t)),fit20.app.hasUI){var n,s=fit20.app.alerts.length+"."+window.performance.now(),r=new Promise((function(e,t){n=e}));return fit20.app.alerts.push({level:e,message:t,id:s,callbackButtons:i||[],resolve_function:n}),r}return alert(t),Promise.reject("fit20 app UI not available")},fit20.app.removeAlert=function(e){var t=fit20.app.alerts.findIndex((function(t){return t.id==e}));t>=0&&fit20.app.alerts.splice(t,1)},Vue.component("alerts",{data:function(){return{alerts:fit20.app.alerts}},template:'\n      <div class="alerts">\n        <div class="row justify-content-center">\n          <div class="col-8">\n            <div v-for="alert in alerts" :class="alertClass(alert.level)" role="alert" style="white-space: pre-line;"\n              @click="removeHandler(alert)"\n            >\n              <button type="button" class="close" aria-label="Close">\n                <span aria-hidden="true"><i class="fas fa-times"></i></span>\n              </button>\n              <div class="mb-2 mr-3">{{ alert.message }}</div>\n              <div v-if="alert.callbackButtons">\n                <button v-for="callbackButton in alert.callbackButtons" v-if="callbackButton.text"\n                  :class="buttonClass(alert.level)" type="button"\n                  @click="callbackHandler(alert, callbackButton, $event)"\n                >{{ callbackButton.text }}</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',methods:{alertClass:function(e){return"alert alert-"+e},buttonClass:function(e){return"mr-2 active btn btn-"+e},callbackHandler:function(e,t,i){i&&(i.stopPropagation(),i.preventDefault()),e.resolve_function(),fit20.app.removeAlert(e.id),isDefined(t.callback)&&t.callback()},removeHandler:function(e){e.resolve_function(),fit20.app.removeAlert(e.id),e.callbackButtons[0]&&isEmpty(e.callbackButtons[0].text)&&e.callbackButtons[0].callback()}}}),$.fn.syncScroll=function(e){e=e||{};var t=this;t.length<=1||t.scroll((function(){var i=$(this).scrollLeft(),n=$(this).scrollTop();t.each((function(){$(this).scrollLeft()!=i&&e.horizontal&&$(this).scrollLeft(i),$(this).scrollTop()!=n&&e.vertical&&$(this).scrollTop(n)}))}))},Vue.filter("dateFormat",(function(e,t){if(e){if("short"===t)return shortDate(e);if("long"===t)return longDate(e);if("input"===t)return inputDate(e)}})),Vue.filter("getWeek",(function(e){if(e)return getWeek(e)})),Vue.filter("appendIfNotEmpty",(function(e,t){return isEmpty(e)?e:e+t})),Vue.filter("prependIfNotEmpty",(function(e,t){return isEmpty(e)?e:t+e})),Vue.filter("removeSpaces",(function(e){return e.replace(/\s/g,"")})),Vue.filter("capitalize",(function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),Vue.filter("showTime",(function(e){return showTime(e||0)})),Vue.filter("round",(function(e){return Math.round(e)})),Vue.filter("weightChange",(function(e){return"SAME"===e?"=":"MORE"===e?"↑":"LESS"===e?"↓":" "})),Vue.filter("inputPattern",(function(e){switch(e){case"ip_address":return"^((\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])$"}})),(fit20=fit20||{}).app=fit20.app||{},fit20.app.hasUI=!1,fit20.app.usesipad=void 0,fit20.app.checkBrowserCapabilities=function(){var e,t,i,n;0==$("#app").length&&alert("Severe error in application: No #app!");var s=function(){var r=document.documentElement.clientHeight||document.body.clientHeight,a=document.documentElement.clientWidth||document.body.clientWidth;r==t&&a==i||($("#app").css({"min-height":r,"max-height":r}),$("#app").css({"min-width":a,"max-width":a}),fit20.log(`* Height and width of browser window have been adjusted to h=${r} w=${a} after ${n} ms.`),t=r,i=a),(n*=2)<1e4&&(e=setTimeout(s,n))},r=function(){clearTimeout(e),n=400,e=setTimeout(s,n)};return void 0!==window.onorientationchange?window.onorientationchange=r:screen.onorientationchange=r,void 0!==window.onresize?window.onresize=r:screen.onresize=r,r(),isDefined(window.iPadVersion)&&window.iPadVersion>0?(fit20.app.usesipad=!0,window.iPadVersion<100?fit20.app.addAlert("warning",$t("M0130",{version:window.iPadVersion/10})):window.iPadVersion<113&&fit20.app.addAlert("warning",$t("M0131",{version:window.iPadVersion/10})),window.iPadVersion):(fit20.app.usesipad=!1,"")},fit20.app.updateUI=function(e){fit20.log("* Updating UI"+(e?` (${e})`:"")),fit20.app.hasAPI()?$(".auth").removeAttr("disabled"):$(".auth").attr("disabled",!0),fit20.app.signedIn()?($(".ifSignedOut").hide(),$(".ifSignedIn").show()):($(".ifSignedIn").hide(),$(".ifSignedOut").show()),fit20.app.hasUI?$(".ifUI").show():$(".ifUI").hide()},fit20.app.accessTokenTimestamp=Date.now(),fit20.app.addAccessTokenNoCache=function(e){return isDefined(e)?(fit20.app.accessTokenTimestamp-Date.now()>1e3&&(fit20.app.accessTokenTimestamp=Date.now()),e+(/\?/.test(e)?"&":"?")+"access_token="+fit20.app.getAccessToken()+"&timestamp="+fit20.app.accessTokenTimestamp):void 0},fit20.app._blocking=[],fit20.app._nonBlocking=0,fit20.app.showSpinner=function(e){fit20.log(`* - showSpinner ${e}`),$(".hide-during-loading").css({visibility:"hidden"}),$(".loading-spinner").css({visibility:"visible"}),fit20.app.spinnerTimeout=setTimeout(fit20.app.forceHideSpinner,1e4)},fit20.app.hideSpinner=function(e){fit20.log(`* - hideSpinner ${e}`),fit20.app.spinnerTimeout&&(clearTimeout(fit20.app.spinnerTimeout),fit20.app.spinnerTimeout=void 0),$(".loading-spinner").css({visibility:"hidden"}),$(".hide-during-loading").css({visibility:"visible"})},fit20.app.forceHideSpinner=function(){fit20.app.hideSpinner("forced")},fit20.app.startLoading=function(e,t){"boolean"!=typeof e||e?("boolean"==typeof e&&(e=""),e=e||"",(isUndefined(t)||0==t.length)&&(t=$("body")),fit20.app._blocking.some((e=>e.is(t)))||(fit20.log("* - show blocking spinner"),fit20.app._blocking.push(t),t.append('<div" class="loaderOverlay spinner"><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div>'+(e?'<br><br><span style="background: #000; color: #fff; padding: 1ex;">'+$t(e)+"</span>":"")+"</div>"))):fit20.app._nonBlocking++||fit20.app.showSpinner(fit20.app._nonBlocking)},fit20.app.stopLoading=function(e,t){if("boolean"!=typeof e||e){(isUndefined(t)||0==t.length)&&(t=$("body"));var i=fit20.app._blocking.findIndex((e=>e.is(t)));i>=0&&(fit20.log("* - hide blocking spinner"),fit20.app._blocking.splice(i,1),$(".loaderOverlay",t).remove())}else--fit20.app._nonBlocking||fit20.app.hideSpinner(fit20.app._nonBlocking)},fit20.app.formModel=function(e){var t={};return $("input[id], select[id], textarea[id]",e.$el).get().forEach((function(e){e.id.split(".").reduce((function(e,t,i,n){return e[t]||(e[t]=i==n.length-1?null:{}),e[t]}),t)})),t},Vue.component("search-box",{template:'\n    <div class="input-group">\n      <input class="form-control" type="text" autocomplete="off" :placeholder="$t(\'M0029\')"\n        v-on:input="$emit(\'input\', $event.target.value)"\n        v-on:keyup.enter.stop.prevent=""\n      />\n      <span class="input-group-btn" onclick="$(this).prev().val(\'\')" v-on:click="$emit(\'input\', \'\')">\n        <button class="btn btn-secondary">\n          <i class="fas fa-times"></i>\n        </button>\n      </span>\n    </div>\n  '}),Vue.component("modal",{template:'\n    <div class="modal">\n      <div class="modal-dialog" :class="\'modal-\'+size" role="document">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h5 class="modal-title">\n              <slot name="title"></slot>\n            </h5>\n            <button type="button" class="close" data-dismiss="modal" aria-label="Close"  @click="closeEvent()">\n              <span aria-hidden="true">&times;</span>\n            </button>\n          </div>\n          <div class="modal-body">\n            <slot>\x3c!-- default content --\x3e</slot>\n          </div>\x3c!-- modal-body --\x3e\n          <div class="modal-footer">\n            <slot name="controls"></slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  ',props:{size:{type:String,default:"md"}},methods:{closeEvent:function(){this.$emit("close")}},mounted:function(){$(this.$el).on("shown.bs.modal",(e=>this.$nextTick((function(){this.$emit("open")}))))}}),fit20.app.modal=function(e){return $("#"+e).modal({backdrop:"static"})},(fit20=fit20||{}).model={machines:[{tag:"chest",name:"Chest Press"},{tag:"lat",name:"Lat Pull"},{tag:"leg",name:"Leg Press"},{tag:"abdominals",name:"Abdominals"},{tag:"back",name:"Back Extension"},{tag:"aa",name:"Adduction / Abduction"}],tagToMachineName:function(e){let t=fit20.model.machines.find((function(t){return t.tag==e}));return t?t.name:void 0},nameToTag:function(e){return e.endsWith("duction")?"aa":e.toLowerCase().replace(/\s.*/,"")},matchingMachines:function(e,t,i){if(isEmpty(t)){if(isEmpty(i))return[];t=fit20.model.nameToTag(i)}return"aa"==t?e.filter((e=>e.name.endsWith("duction"))):e.filter((e=>e.name.toLowerCase().startsWith(t)))}},(fit20=fit20||{}).storeLifetime=18e5,fit20.storeItem=function(e,t,i,n){return isUndefined(e),isDefined(n)?Vue.set(e[t],n,i):Vue.set(e,t,i),localforage.setItem(t,{value:e[t],timestamp:Date.now()}).then((function(e){if(!isUndefined(e))return e.value;var i=`LocalForage setItem(${t}) returned an undefined value.`;fit20.log(`!! store ${i}`),fit20.logServer(i,"store.js/fit20.storeItem",2),Promise.reject(i)})).catch((function(e){fit20.log&&(e=`LocalForage setItem(${t}) caused an error: ${e}`,fit20.log(`!! store ${e}`)),Promise.reject(e)}))},fit20.getItem=function(e){return localforage.getItem(e).then((function(t){return isUndefined(t)?void fit20.log("* store Cannot getItem from localstorage (not present): "+e):isUndefined(t.timestamp)||Date.now()-t.timestamp>fit20.storeLifetime?void fit20.log("* store Cannot getItem from localstorage (too old): "+e):(fit20.log(`* store GetItem from localstorage: ${e} = ${shallowStringify(t.value)} (age is ${Math.round((Date.now()-t.timestamp)/6e4)} min.)`),t.value)})).catch((function(t){var i=`!! store Error in getItem ${e} from localstorage: ${t}`;fit20.log(i)}))},fit20.showLocalStorage=function(){localforage.iterate((function(e,t,i){console.dir({key:t,value:e})}))},fit20.store=new Vuex.Store({state:{fit20:void 0,machines:void 0,currentTrainer:void 0,studios:void 0,currentStudio:void 0,studioMachines:void 0,studioMachineSettings:void 0,members:void 0,memberSessions:void 0,memberMachineSettings:void 0,activeMemberSessions:void 0},mutations:{setFit20:function(e,t){fit20.storeItem(e,"fit20",t)},setMachines:function(e,t){fit20.storeItem(e,"machines",mapById(t))},setCurrentTrainer:function(e,t){fit20.storeItem(e,"currentTrainer",t),fit20.log(`* store Set current trainer to ${t.fullName} (${t.id})`)},setStudios:function(e,t){fit20.storeItem(e,"studios",t)},setCurrentStudio:function(e,t){fit20.log(`* store Set current studio to ${t.name} ${t.subName} (${t.id})`),Promise.all([fit20.get(["studioMachines",t.id],!0),fit20.get(["members",t.id],!0),fit20.get(["studioMachineSettings",t.id],!0)]).catch((e=>fit20.log(`!! store error getting studio data: ${e}`))).then((()=>{fit20.log(`* store Current studio ${t.name} ${t.subName} has ${Object.keys(fit20.store.state.studioMachineSettings).length} studioMachineSettings`),fit20.storeItem(e,"currentStudio",t)}))},setCurrentStudioGatewayAddress:function(e,t){fit20.storeItem(e,"currentStudio",t);var i=e.studios.findIndex((function(e){return e.id==t.id}));fit20.storeItem(e,"studios",t,i)},setStudioMachines:function(e,t){fit20.storeItem(e,"studioMachines",t.sort((function(e,t){return e.sortOrder-t.sortOrder})))},setStudioMachineSettings:function(e,t){fit20.storeItem(e,"studioMachineSettings",t)},setMembers:function(e,t){if(Array.isArray(t)&&(t=mapById(t)),fit20.storeItem(e,"members",t),isDefined(t)){fit20.log("* store Initializing memberSessions in setMembers");var i={};Object.values(t).forEach((function(e){isDefined(e)&&isDefined(e.id)&&(i[e.id]=void 0)})),fit20.storeItem(e,"memberSessions",i),fit20.log("* store Initializing memberMachineSettings in setMembers");var n={};Object.values(t).forEach((function(e){isDefined(e)&&isDefined(e.id)&&(n[e.id]=void 0)})),fit20.log("* store Storing memberMachineSettings in setMembers"),fit20.storeItem(e,"memberMachineSettings",n)}},setMember:function(e,t){isUndefined(t)?fit20.log("!! store setMember called on undefined member."):(Vue.set(e.members,t.id,t),fit20.storeItem(e,"members",t,t.id))},clearMemberSessions:function(e,t){isDefined(t)&&(e.memberSessions=e.memberSessions||{},fit20.storeItem(e,"memberSessions",[],t),fit20.log("* store Clear memberSessions for member id="+t))},setMemberSessions:function(e,t){var i=isEmpty(t)?void 0:t[0].parentMemberId;isDefined(i)?(e.memberSessions=e.memberSessions||{},t=t||[],fit20.storeItem(e,"memberSessions",t,i),fit20.log("* store Set "+t.length+" memberSessions for member id="+i)):isEmpty(t)?fit20.log("* store No sessions were set, memberId is undefined and sessions is empty."):fit20.log("! store No sessions were set, memberId is undefined.")},setMemberMachineSettings:function(e,t){var i=(t=t||{}).parentMemberId||(Object.values(t)[0]||{}).parentMemberId;if(!isDefined(i))throw"SetMemberMachineSettings did not get a memberId in "+JSON.stringify(t);var n=t.parentMachineId;if(isDefined(n)){e.memberMachineSettings=e.memberMachineSettings||{};var s=e.memberMachineSettings[i]||{};s[n]=t,fit20.storeItem(e,"memberMachineSettings",s,i),fit20.log(`* store Set memberMachineSettings for member id=${i} machine id=${n}`)}else delete t.parentMemberId,e.memberMachineSettings=e.memberMachineSettings||{},fit20.storeItem(e,"memberMachineSettings",t,i),fit20.log(`* store Set all memberMachineSettings for member id=${i}`)},setMemberSession:function(e,t){var i=t.parentMemberId;if(isDefined(i)){e.memberSessions=e.memberSessions||{};var n=e.memberSessions[i]||[],s=n.findIndex((function(e){return e.id==t.id}));s<0?n.push(t):Vue.set(n,s,t),fit20.storeItem(e,"memberSessions",n,i),fit20.log("* store Set "+(s<0?"new":"existing")+" memberSession for member id="+i)}else fit20.log("! store No session was set because the memberId was not given.")},setActiveMemberSession:function(e,t){if(isUndefined(e.activeMemberSessions)&&(e.activeMemberSessions={}),isObject(t)){isUndefined(t.exercises)&&(t.exercises=[]);var i=t.parentMemberId;fit20.log("* store Set active session for member "+i+" with "+t.exercises.length+" exercises.")}else{i=t;t=void 0,fit20.log("* store Unset active session for member "+i)}fit20.storeItem(e,"activeMemberSessions",t,i)},duoChanged:function(e,t){fit20.memberStore.memberHasChanged()},RESET:function(e){Object.keys(e).forEach((function(t){e[t]=void 0}))}},getters:{}}),fit20.fetchFilters={_date:function(e){return e.replace(/T.*/,"")},_person:function(e){return["firstName","lastName"].forEach((function(t){isUndefined(e[t])&&(e[t]="")})),e},machine:function(e){return isDefined(e.weightValues)&&!Array.isArray(e.weightValues)&&(e.weightValues=e.weightValues.split(/\s+/)),e},trainer:function(e){return e=fit20.fetchFilters._person(e),["birthDate"].forEach((function(t){isDefined(e[t])&&(e[t]=fit20.fetchFilters._date(e[t]))})),e},member:function(e){if(e=fit20.fetchFilters._person(e),["birthDate","membershipSince","membershipUntil","measureDate"].forEach((function(t){isDefined(e[t])&&(e[t]=fit20.fetchFilters._date(e[t]))})),isDefined(e.measureDates))for(var t=0;t<e.measureDates.length;++t)e.measureDates[t]=fit20.fetchFilters._date(e.measureDates[t]);return e},memberMachineSettings:function(e,t){if(isUndefined(t))throw"No memberId given to memberMachineSettings filter.";return Object.keys(e).filter((e=>isNaN(e))).forEach((t=>delete e[t])),e.parentMemberId=t,e}},fit20.storeConf={fit20:{mutation:"setFit20",fetch:"getFit20"},machines:{mutation:"setMachines",fetch:"listMachine",fetchFilter:fit20.fetchFilters.machine},currentTrainer:{mutation:"setCurrentTrainer",fetch:"getTrainer",fetchParams:function(){return{studioId:id0(fit20.store.state.currentStudio),trainerId:fit20.store.state.currentTrainer.id}},fetchFilter:fit20.fetchFilters.trainer,persist:"putTrainer",persistParams:function(e){return["birthDate"].forEach((function(t){e[t]&&""==e[t]&&delete e[t]})),{studioId:id0(fit20.store.state.currentStudio),resource:e}}},studios:{mutation:"setStudios",fetch:"listStudio",fetchParams:function(){return{}}},currentStudio:{mutation:"setCurrentStudio"},studioMachines:{mutation:"setStudioMachines",fetch:"listStudioMachine",fetchParams:function(e){return{studioId:e||fit20.store.state.currentStudio.id}},fetchFilter:fit20.fetchFilters.machine},sensorGateway:{mutation:"setCurrentStudioGatewayAddress",persist:"setSensorGateway",persistParams:function(e){return{studioId:e.id,sensorGatewayAddress:e.gatewayIPAddress}}},studioMachineSettings:{mutation:"setStudioMachineSettings",fetch:"getStudioMachineSettings",fetchParams:function(e){return{studioId:e||fit20.store.state.currentStudio.id}},persist:"setStudioMachineSettings",persistParams:function(e){return{studioId:id0(fit20.store.state.currentStudio),resource:{settings:e}}}},members:{mutation:"setMembers",fetch:"listMember",fetchParams:function(e){return{studioId:e||fit20.store.state.currentStudio.id,onlyActive:!0}},fetchFilter:fit20.fetchFilters.member},memberSessions:{mutation:"setMemberSessions",fetch:"listSession",fetchParams:function(e){if(!isEmpty(e)){var t=isEmpty(fit20.store.state.memberSessions[e])?20:50+fit20.store.state.memberSessions[e].length;return fit20.log("* store Requesting fetch of "+t+" sessions."),{studioId:id0(fit20.store.state.currentStudio),memberId:e,offset:-t}}}},memberMachineSettings:{mutation:"setMemberMachineSettings",fetch:"machineSettings",fetchParams:function(e){return{studioId:id0(fit20.store.state.currentStudio),memberId:e}},fetchFilter:fit20.fetchFilters.memberMachineSettings,persist:"putMemberMachineSettings",persistParams:function(e,t){if(!t)throw"Application error in put('memberMachineSettings', "+JSON.stringify(e)+", "+t+"): Must have a memberId.";var i=Object.assign({},e);return Object.keys(i).filter((e=>isNaN(e))).forEach((e=>delete i[e])),delete i.parentMemberId,delete i.etag,delete i.kind,{studioId:id0(fit20.store.state.currentStudio),memberId:t,resource:{settings:i}}}},member:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"putMember",persistParams:function(e){return["birthDate","membershipSince","membershipUntil","measureDate"].forEach((function(t){e[t]&&""==e[t]&&delete e[t]})),{studioId:id0(fit20.store.state.currentStudio),resource:e}}},memberSession:{mutation:"setMemberSession",fetchFilter:fit20.fetchFilters.session,persist:"putSession",persistParams:function(e){var t=e.parentMemberId;if(!t)throw"Application error in put('memberSession', "+JSON.stringify(e)+"): Must have a parentMemberId.";return{studioId:fit20.store.state.currentStudio.id,memberId:t,resource:e}}},addRemark:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"addRemark",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e.memberId,resource:{text:e.text}}}},addAim:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"addAim",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e.memberId,resource:{text:e.text}}}},addResult:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"addResult",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e.memberId,resource:{text:e.text}}}},changeRemark:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"changeRemark",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e.memberId,index:e.index,resource:{text:e.text}}}},changeAim:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"changeAim",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e.memberId,index:e.index,resource:{text:e.text}}}},changeResult:{mutation:"setMember",fetchFilter:fit20.fetchFilters.member,persist:"changeResult",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e.memberId,index:e.index,resource:{text:e.text}}}},sensorCalibration:{mutation:"setMemberMachineSettings",persist:"putSensorCalibration",persistParams:function(e){var t=e.machineId,i=e.memberId;return delete e.machineId,delete e.memberId,e.inStudioId=id0(fit20.store.state.currentStudio),{studioId:id0(fit20.store.state.currentStudio),memberId:i,machineId:t,resource:e}}},joinDuoPartner:{mutation:"duoChanged",persist:"duoJoin",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId1:e[0],memberId2:e[1]}}},splitDuoPartner:{mutation:"duoChanged",persist:"duoSplit",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e}}},putMemberOnHold:{mutation:"setMembers",fetchFilter:fit20.fetchFilters.member,persist:"putMemberOnHold",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e,onlyActive:!1}}},addMemberToStudio:{mutation:"setMembers",fetchFilter:fit20.fetchFilters.member,persist:"addMemberToStudio",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e,onlyActive:!1}}},removeMemberFromStudio:{mutation:"setMembers",fetchFilter:fit20.fetchFilters.member,persist:"removeMemberFromStudio",persistParams:function(e){return{studioId:fit20.store.state.currentStudio.id,memberId:e,onlyActive:!1}}}},fit20._applyFilter=function(e,t,i){if(Array.isArray(t)){if(e)for(var n=0;n<t.length;++n)t[n]=e(t[n],i)}else e&&(t=e(t,i));return t},fit20.get=function(e,t){var i=void 0;if(Array.isArray(e)&&(i=e[1],e=e[0]),t)return fit20.log("* store Getting "+e+(i?" / "+i:"")+" by forced refresh"),fit20.fetch(fit20.storeConf[e],e,i).then((function(n){return isUndefined(n)&&fit20.log("! store fit20.get "+e+(i?" / "+i:"")+" is undefined"),"function"==typeof t&&t(n),n}));var n=i&&fit20.store.state[e]?fit20.store.state[e][i]:fit20.store.state[e];return isDefined(n)?(fit20.log("* store Getting "+e+(i?" / "+i:"")+" already present in Vuex store: "+shallowStringify(n)),Promise.resolve(n)):fit20.getItem(e).then((function(t){return isDefined(i)&&isDefined(t)&&(t=t[i]),isDefined(t)?(fit20.log("* store Getting from localstorage: "+e+(i?" / "+i:"")),fit20.store.commit(fit20.storeConf[e].mutation,t),t):(fit20.log("* store Getting from database: "+e+(i?" / "+i:"")),fit20.fetch(fit20.storeConf[e],e,i))}))},fit20.fetch=function(e,t,i){if(isUndefined(e)||isUndefined(e.fetch))return fit20.log("!! store Error fetching "+t+(i?" / "+i:"")+" with invalid conf="+JSON.stringify(e)),Promise.reject("fit20.fetch: invalid conf");var n=e.fetchParams?e.fetchParams(i):{};return isUndefined(n)?(fit20.log("* store Nothing to fetch for "+t+(i?" / "+i:"")),Promise.resolve(null)):fit20._activeFetchRequests[t]&&fit20._activeFetchRequests[t][i]?(fit20.log("* store Fetch already in progress for "+t+(i?" / "+i:"")),fit20._activeFetchRequests[t][i]):(fit20.log(`> store Fetching ${t}${i?" / "+i:""} fetchParams=${JSON.stringify(n)} at ${Date()}`),fit20._activeFetchRequests[t]||(fit20._activeFetchRequests[t]={}),fit20._activeFetchRequests[t][i]=fit20.callAPI(gapi.client.fit20[e.fetch](n)).then((function(s){return delete s.etag,delete s.kind,s=fit20._applyFilter(e.fetchFilter,s,i),Array.isArray(s)?fit20.log("< store Fetched "+t+(i?" / "+i:"")+" fetchParams="+JSON.stringify(n)+" ("+s.length+" items)"):fit20.log("< store Fetched "+t+(i?" / "+i:"")+" fetchParams="+JSON.stringify(n)+" ("+typeof s+")"),fit20.store.commit(e.mutation,s),fit20._activeFetchRequests[t][i]=!1,s})).catch((function(e){var s="Error fetching "+t+(i?" / "+i:"")+" fetchParams="+JSON.stringify(n)+": "+e;fit20.log("!! store "+s),fit20._activeFetchRequests[t][i]=!1,Promise.reject(`M9596: ${JSON.stringify(e)}\nM9698`)})),fit20._activeFetchRequests[t][i])},fit20._activeFetchRequests={},fit20.put=function(e,t,i,n,s){Object.keys(t).forEach((function(e){isUndefined(t[e])&&delete t[e]}));var r=fit20.storeConf[e];if(isUndefined(r))throw"fit20.storeConf["+e+"] is undefined.";if(r.persist){var a=r.persistParams(t,n);return fit20.log(`> store Persisting ${e}${n?" / "+n:""} persistParams=${shortStringify(a)} at ${Date()}`),fit20.app.startLoading(!s),fit20.callAPI(gapi.client.fit20[r.persist](a)).then((function(t){return fit20.app.stopLoading(!s),fit20.log(`< store Persisted ${e}${n?" / "+n:""}${t&&t.id?" id="+t.id:""}`),t=fit20._applyFilter(r.fetchFilter,t,n),isDefined(r.mutation)&&fit20.store.commit(r.mutation,t),i&&i(t,!1),t})).catch((function(r){fit20.app.stopLoading(!s);var a=`!! store Error (${JSON.stringify(r)}) persisting ${e}${n?" / "+n:""} := ${JSON.stringify(t)}`;return fit20.log(a),i&&i(r,!0),Promise.reject(`M9590 ${r}`)}))}return fit20.store.commit(r.mutation,t),Promise.resolve(t)},fit20.clearStores=function(e){localforage.clear().then((function(){fit20.store.commit("RESET"),fit20.log("* store localstorage is cleared."),e&&e()})).catch((function(e){fit20.log("!! store Error clearing localstorage "+e)}))},fit20.refreshAll=function(){fit20.log("* store Refreshing all storage!"),fit20.app.startLoading("L0104"),fit20.clearStores((function(){fit20.log("* store Reloading page!"),window.location.reload(!0)}))},fit20.reloadStoreItems=function(){return fit20.get("fit20",!0).then((function(){return fit20.get("machines",!0)}))},fit20.callAPI=function(e,t){return(fit20.app.signedIn()?Promise.resolve():fit20.app.signin()).then((function(){return new Promise((function(i,n){fit20.app.hasAPI()?(fit20.app.startLoading(!1),e.execute((function(s){if(fit20.app.stopLoading(!1),s&&!s.code){var r=s.result;r.hasOwnProperty("items")&&r.items instanceof Array&&(r=r.items),i&&i(r)}else if(s&&401==s.code&&!t)fit20.log("! Requesting signin before retrying API call."),fit20.app.signin().then((function(){fit20.log("! Retrying API call."),fit20.callAPI(e,1).then((function(e){i&&i(e)})).catch((function(e){n&&n(e)}))})).catch((function(e){fit20.log(`!! User is not authenticated: ${e}`),fit20.app.addAlert("error","M9502\n\nM9698"),n&&n(e)}));else if(s&&4==Math.floor(s.code/100)){var a=fit20.callAPI.errorMessage(e,s);n&&n(a)}else if(s&&5==Math.floor(s.code/100)){a=fit20.callAPI.errorMessage(e,s);fit20.app.addAlert("error","M9595\n "+a+" \nM9698"),n&&n(a)}else{a=fit20.callAPI.errorMessage(e,s);fit20.app.addAlert("error","M9697\n "+a+" (code "+s.code+")\nM9594"),n&&n(a)}}))):(fit20.app.addAlert("error","M9502"),fit20.log(`!! User is not authenticated or API is not available. API = ${JSON.stringify(e)}`),n&&n("M9502"))}))}))},fit20.callAPI.errorMessage=function(e,t){return t&&(t.message||t.error&&t.error.message)},fit20.callAJAX=function(e,t){fit20.app.startLoading(!1),isUndefined(t.complete)?t.complete=[]:Array.isArray(t.complete)||(t.complete=[t.complete]),t.complete.push((function(){fit20.app.stopLoading(!1)})),$.ajax(e,t)},fit20.memberStore={memberHasChanged:function(){fit20.log("* store memberStore: memberHasChanged"),fit20.get("members",!0).then((function(){return fit20.get("studios",!0)})).then((function(){fit20.app.vue.updateMemberTabs()}))},getAdditionalMemberData:function(e,t){return(t||isUndefined(fit20.store.state.memberSessions)||isUndefined(fit20.store.state.memberSessions[e])?fit20.get(["memberSessions",e]):Promise.resolve()).then((function(){return t||isUndefined(fit20.store.state.memberMachineSettings)||isUndefined(fit20.store.state.memberMachineSettings[e])?fit20.get(["memberMachineSettings",e]):Promise.resolve()}))},getDetails:function(e,t){t=t||{};var i=$(`#memberPanel-${e}`);fit20.app.startLoading(!0,i),fit20.log("* fit20.memberStore getDetails starting for "+e);var n=Promise.resolve(),s=fit20.store.state.members[e];return isUndefined(s)||!s._complete?n=fit20.getItem("member").then((function(t){return isDefined(t)&&(t=t[e]),isUndefined(t)||!t._complete?(fit20.log("* store Refreshing member details from server: "+e),fit20.memberStore.refreshDetails(e)):(fit20.log("* store Refreshing member details from local storage: "+e),fit20.store.commit("setMember",t),Promise.resolve())})):fit20.log("* store No need to refresh member details: "+e),n.then((function(){return fit20.memberStore.getAdditionalMemberData(e,!1)})).then((function(n){fit20.app.stopLoading(!0,i);var s=fit20.store.state.members[e];return isUndefined(s)?Promise.reject(`No member found in store, for memberId=${e}`):(fit20.log(`* fit20.memberStore getDetails completed for ${e} (${s.fullName})`),!t.asDuoPartner&&s.duoPartner?(fit20.log(`* fit20.memberStore getDetails for duo partner of ${e} (${s.fullName})`),fit20.memberStore.getDetails(s.duoPartner,{asDuoPartner:!0})):n)})).catch((function(i){t.asDuoPartner?fit20.app.addAlert("error",`M9070: ${i}\nM9698`):fit20.app.addAlert("error",`M9596: ${i}\nM9698`),fit20.log(`!! fit20.memberStore getDetails failed for ${e}: ${i}`)}))},refreshDetails:function(e){var t=$(`#memberPanel-${e}`);fit20.app.startLoading(!0,t),fit20.log("* fit20.memberStore refreshDetails: "+e);var i={mutation:"setMember",fetchFilter:function(e){return e._complete=!0,fit20.fetchFilters.member(e)},fetch:"getMember",fetchParams:function(e){return{studioId:id0(fit20.store.state.currentStudio),memberId:e}}};return fit20.fetch(i,"members",e).then((function(){return fit20.memberStore.getAdditionalMemberData(e,!0)})).catch((function(t){fit20.log(`!! fit20.memberStore refreshDetails failed for ${e} because ${t}`)})).then((function(e){return fit20.app.stopLoading(!0,t),e}))}},(fit20=fit20||{}).app=fit20.app||{},fit20.components=fit20.components||{},Vue.set(fit20,"appNeedsUpdate",!1),fit20.app.needsUpdate=function(){fit20.callAPI(gapi.client.fit20.getAppVersion()).then((function(e){e.text!=window.appVersion&&(fit20.log(`! App needs update from ${window.appVersion} to ${e.text}`),fit20.app.addAlert("warning","L0101"),Vue.set(fit20,"appNeedsUpdate",!0))}))},fit20.app.initUI=function(){fit20.log("* Creating UI"),fit20.app.colors=getThemeColors(),fit20.app.checkBrowserCapabilities();var e={install:function(e,t){e.prototype.$t=function(e,t,i){return fit20.i18n.translate(e,t,i)}}};return Vue.use(e),new Promise((function(e,t){fit20.log("* Creating the Vue object"),fit20.app.vue=new Vue({el:"#app",store:fit20.store,components:fit20.components,data:{fit20:fit20,selectedTabHref:"#studios",currentMemberIds:[],maxNrMemberTabs:3},computed:{currentStudio:function(){return fit20.store.state.currentStudio},currentMembers:function(){return isDefined(this.currentMemberIds)&&!isEmpty(fit20.store.state.members)?this.currentMemberIds.map((function(e){return fit20.store.state.members[e]})).filter((function(e){return e})):[]},memberTabsDisplay:function(){var e=fit20.store.state.activeMemberSessions||{},t=Object.values(e).filter(isDefined).map((e=>e.parentMemberId));return this.currentMembers.map((function(t){var i=isDefined(e[t.id]);return`${t.fullName} (${t.id})`+(t.duoPartner&&fit20.store.state.members[t.duoPartner]?` + ${fit20.store.state.members[t.duoPartner].fullName} (${t.duoPartner})`:"")+` [${i?"o":"x"}]`})).join(" , ")+` | active sessions for ${t.join(" , ")}`}},methods:{currentDuoPartner:function(e){return this.currentMembers.find((function(t){return t.duoPartner&&t.duoPartner==e}))},isInSession:function(){return(fit20.store.state.activeMemberSessions?Object.values(fit20.store.state.activeMemberSessions).filter((function(e){return isDefined(e)})):[]).length>0},selectTab:function(e){this.selectedTabHref=e},selectStudioId:function(e){this.selectedTabHref="#members"},selectMemberId:function(e){isUndefined(this.currentMemberIds)&&(this.currentMemberIds=[]);var t=this.currentDuoPartner(e);if(t)e=t.id;else if(!this.currentMemberIds.includes(e)){if(!(this.currentMemberIds.length<this.maxNrMemberTabs))return fit20.log(`! selectMemberId cannot open new tab for id=${e}, ${this.currentMemberIds.length} open tabs, current members: [${this.memberTabsDisplay}]`),void fit20.app.addAlert("info","M0065");fit20.log(`* selectMemberId opening new tab, id=${e}`),this.currentMemberIds.push(e)}var i=this;Vue.nextTick((function(){i.selectedTabHref="#member-tab-panel-"+e})),fit20.log(`* selectMemberId selected ${e}, current members: [${this.memberTabsDisplay}]`)},forgetMemberId:function(e){if(isUndefined(this.currentMemberIds))return this.currentMemberIds=[],Promise.resolve("forgetMemberId: no open member tabs");if(this.currentMemberIds.includes(e)){var t=this;return fit20.log(`* forgetMemberId closing tab, id=${e}`),this.selectedTabHref=isDefined(fit20.store.state.currentStudio)?"#members":"#studios",this.$refs.tabpanels.$refs["member_screen_"+e][0].cancelSession({force:!0,tabClosing:!0}).catch((function(t){var i=`Cannot cancel session for ${e}: ${t}`;fit20.log(`!! ${i}`)})).then((function(){var i=t.currentMemberIds.indexOf(e);return i>=0&&t.currentMemberIds.splice(i,1),fit20.log(`* forgetMemberId closed tab, id=${e}, current members: [${t.memberTabsDisplay}]`),Promise.resolve(`forgetMemberId closed ${e}`)}))}return Promise.resolve(`forgetMemberId: open membertabs does not include ${e}`)},updateMemberTabs:function(){isUndefined(this.currentMemberIds)?this.currentMemberIds=[]:(fit20.log(`* updateMemberTabs current members: [${this.memberTabsDisplay}]`),this.currentMemberIds=this.currentMemberIds.filter((function(e){return isDefined(fit20.store.state.members[e])})),this.currentMembers.forEach((function(e){fit20.memberStore.getDetails(e.id)})))},closeAllMemberTabs:function(){var e=this,t=Promise.resolve("start");return this.currentMemberIds.forEach((function(i){t=t.then((function(t){return fit20.log(`* closeAllMemberTabs will close ${i} after '${t}'`),e.forgetMemberId(i)}))})),t.then((function(){return Vue.nextTick()}))}},mounted:function(){var t=this;fit20.log("* Vue object mounted."),fit20.reloadStoreItems().then((function(){fit20.app.hasUI=!0,fit20.app.updateUI("Vue object mounted"),window.addEventListener(fit20.app.usesipad?"pagehide":"beforeunload",(function(e){t.isInSession()&&(e.preventDefault(),e.returnValue="M9034")})),window.addEventListener("unload",(function(e){fit20.log("! User unloads window."),t.isInSession()&&t.closeAllMemberTabs()})),e&&e()}))}})}))},fit20.components.alphabetscroll={template:'\n    <div class="scroll-bar">\n      <span :class="{ inactive : !scrollToItems[char] }" class="badge badge-info" v-for="char in alphabet" @click="clickChar(char)">{{ char }}</span>\n    </div>\n  ',props:["list","itemToName"],methods:{clickChar:function(e){this.scrollToItems[e]&&this.$emit("scrollTo",this.scrollToItems[e])}},computed:{alphabet:function(){return"abcdefghijklmnopqrstuvwxyz".toUpperCase().split("")},scrollToItems:function(){var e={},t=this.itemToName;return this.list&&this.list.forEach((function(i,n){var s=(t(i)||"").charAt(0).toUpperCase();e[s]||(e[s]=i)})),e}}},fit20.components.makephoto={template:'\n    <div class="form-group row">\n      <div class="col-6 mb-4 text-center">\n        <img :src="photoURI" :id="photoId" alt="" class="editPhotoSize">\n      </div>\n      <div class="col-6 mb-4">\n        \x3c!-- new image --\x3e\n        <img :id="newPhotoId" alt="" class="editPhotoSize" v-show="fileSelected"></img>\n      </div>\n      <div class="col-6 text-left">\n        <div class="btn btn-emphasis inputFileHidden">\n          {{ $t(\'M0334\') }}\n          <input :id="inputId"\n               name="image"\n               type="file"\n               class="form-control"\n               accept="image/*"\n               capture="camera"\n               @change="selectFile"\n    \t\t  >\n        </div>\n      </div>\n      <div class="col-6 text-right">\n        <button type="button" class="btn btn-primary" v-if="fileSelected"\n          @click="putPhoto()" :data-dismiss="doDismiss">{{ $t(\'M0028\') }}</button>\n        <button type="button" class="btn btn-secondary" v-if="embedded && fileSelected"\n          @click="forgetPhoto()" :data-dismiss="doDismiss">{{ $t(\'M0025\') }}</button>\n      </div>\n    </div>\x3c!-- end of form-group --\x3e\n  ',props:["subject","callback","embedded"],data:function(){return{file:void 0}},methods:{selectFile:function(){var e=this,t=new FileReader;t.onload=function(t){$("#"+e.newPhotoId).attr("src",t.target.result)},this.file=$("#"+this.inputId)[0].files[0],t.readAsDataURL(this.file)},putPhoto:function(){var e=this,t=new FormData;t.append("image",e.file),fit20.callAJAX(fit20.app.addAccessTokenNoCache(this.subject.photoPostURI),{type:"POST",contentType:!1,data:t,processData:!1,cache:!1,success:function(t,i,n){$("#"+e.photoId).attr("src",e.photoURI),e.file=void 0,e.callback&&e.callback()},error:function(e,t,i){var n=$t("M9590")+" ("+t+") "+$t(i);fit20.app.addAlert("error",n),fit20.log("!! "+n)}})},forgetPhoto:function(){this.file=void 0}},computed:{photoId:function(){return isEmpty(this.subject)?"_photo-image":this.subject.id+"_photo-image"},newPhotoId:function(){return isEmpty(this.subject)?"_new-photo-image":this.subject.id+"_new-photo-image"},inputId:function(){return isEmpty(this.subject)?"_make-photo-image":this.subject.id+"_make-photo-image"},thumbnail:function(){return isEmpty(this.subject)?"":this.subject.thumbnail},photoURI:function(){return isEmpty(this.subject)?"":fit20.app.addAccessTokenNoCache(this.subject.photoURI)},fileSelected:function(){return isDefined(this.file)},doDismiss:function(){return this.embedded?null:"modal"}}},fit20.components.helpdocs={template:'\n    <article>\n      <section class="my-2 helpdocs" v-if="!showingDocument">\n        <div class="container-fluid scrollable">\n          <div class="row card-gutters">\n            <div v-for="question in questions" v-if="isAvailable(question)"\n                :title="question.document_id"\n                class="col-6"\n            >\n              <div class="card card-body h4" @click="openHelpDoc(question)">\n                {{ question[language] }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section class="my-2 d-flex" v-if="showingDocument">\n        <div style="width: 100% !important; min-height: 100% !important; display: flex; flex-direction: column; -webkit-overflow-scrolling:touch; overflow: auto;">\n          <h4>\n            <button type="button" class="btn btn-danger mb-1 mr-1 float-right" aria-label="Close" @click="closeHelpDoc">\n              <span aria-hidden="true" class="close">&times;</span>\n            </button>\n            <span>{{ helpDocTitle }}</span>\n          </h4>\n          <iframe id="helpDocIframe" :src="helpDocUrl" style="width:100%!important; overflow:scroll!important; flex: 1 1 auto;">Please wait</iframe>\n        </div>\n      </section>\n    </article>\n  ',data:function(){return{questions:[],helpDocTitle:"",helpDocUrl:"",showingDocument:!1,indexTsvUrl:"https://helpdocs-dot-fit20app-4-module.appspot.com/index.tsv"}},computed:{language:function(){return fit20.i18n.getLanguage()}},methods:{openHelpDoc:function(e){this.helpDocTitle=e[this.language],this.helpDocUrl=e["url_"+this.language]+"?embedded=true",this.showingDocument=!0},closeHelpDoc:function(){this.showingDocument=!1},isAvailable:function(e){return e[this.language]&&e["url_"+this.language]}},mounted:function(){var e=this;$.ajax(this.indexTsvUrl,{success:function(t,i,n){var s=t.split(/\r?\n/),r=s[0].split(/\t/);r[0]="document_id";for(var a=1;a<s.length;a+=2){for(var o=s[a].split(/\t/),c={},l=0;l<r.length;++l)c[r[l]]=o[l];var m=s[a+1].split(/\t/);for(l=1;l<r.length;++l)c["url_"+r[l]]=m[l];e.questions.push(c)}},error:function(t,i,n){message=`Cannot get helpdocs index: ${i} (${t.status}), ${n}`,e.questions=[{}],e.questions[0][e.language]=message,e.questions[0]["url_"+e.language]="javascript:return",fit20.log("!! "+message)}})}},fit20.sensors=fit20.sensors||{},fit20.defaultSensorconnect={template:'\n    <div class="modal">\n      <div class="modal-dialog modal-md" role="document">\n        <div class="modal-content">\n          <div class="modal-header">\n            <h5 class="modal-title">{{ $t(\'M0913\') }}</h5>\n            <button type="button" class="close" data-dismiss="modal" aria-label="Close">\n              <span aria-hidden="true">&times;</span>\n            </button>\n          </div>\x3c!-- modal-header --\x3e\n          <div class="modal-body">\n          </div>\x3c!-- modal-body --\x3e\n          <div class="modal-footer">\n          </div>\n        </div>\x3c!-- modal-content --\x3e\n      </div>\n    </div>\n  ',props:["studio"],methods:{}},fit20.sensors_isIsensit=function(e){return/^\d{1,3}(?:\.\d{1,3}){3}$/.test(e)||/^[0-9a-fA-F]{1,4}(?:::?[0-9a-fA-F]{1,4}|\.\d{1,3})*(?:::)?$/.test(e)||/^.+\.local\.?$/.test(e)},fit20.sensors.init=function(e){if(fit20.log("* Sensor initialization."),fit20.sensors_init=fit20.sensors.init,fit20.sensors={active:!1,sensorconnect:fit20.defaultSensorconnect,init:fit20.sensors_init,leadInSeconds:-3},isUndefined(e)||isEmpty(e.gatewayIPAddress))return fit20.log("* Sensor not present in this studio."),Promise.resolve("M0913");if(fit20.sensors_isIsensit(e.gatewayIPAddress))fit20.sensors.js_file="isensit.js";else{if(!e.gatewayIPAddress.endsWith(".js"))return fit20.log(`* Sensor specification '${e.gatewayIPAddress}' is invalid.`),Promise.reject("M0911");fit20.sensors.js_file=e.gatewayIPAddress}return new Promise((function(t,i){jQuery.getScript(`js/app/sensors/${fit20.sensors.js_file}`).done((function(){fit20.sensors.init=fit20.sensors_init,fit20.sensors.connect(e).then((function(){t("M0910")})).catch((function(e){i(e)}))})).fail((function(){i(`M0915: Cannot find ${fit20.sensors.js_file}`)}))}))},fit20.sensors_activateNow=function(){var e=fit20.store.state.currentStudio;e.gatewayIPAddress="",fit20.put("sensorGateway",e)},fit20.components.sensorresults_graph={template:'\n    <div class="sensorGraph" :id="graphId">\n    </div>\n  ',props:["graphData","reversalTimes","member"],computed:{graphId:function(){return"sensor-graph-"+(this.member&&this.member.id)}},methods:{drawChart:function(){if(!(this.graphData.length<2)){fit20.log(`* Sensor-results: drawing chart of ${this.graphData.length} points for member ${this.member&&this.member.fullName}`);var e=d3.select(`#${this.graphId}`).node().getBoundingClientRect(),t={width:e.width,height:e.height,overextendFactor:.2};t.overextend=t.height*t.overextendFactor;var i=this.graphData||[];t.timeExtent=d3.extent(i.map((function(e){return e[0]}))),t.extent=[d3.extent(i.map((function(e){return e[1]}))),d3.extent(i.map((function(e){return e[2]})))],t.svg=d3.select(`#${this.graphId}`).append("svg").attr("width",t.width).attr("height",t.height),t.container=t.svg.append("g"),t.xScale=d3.scaleLinear().domain(t.timeExtent).range([0,t.width]),t.yScale=d3.scaleLinear().domain([t.extent[1][0],t.extent[1][1]]).range([t.height-t.overextend,t.overextend]),t.graphDataActual=d3.range(0,i.length).map((e=>[i[e][0],i[e][1]])),t.graphDataReference=d3.range(0,i.length).map((e=>[i[e][0],i[e][2]])),t.graphLine=d3.line().x((function(e){return t.xScale(e[0])})).y((function(e){return t.yScale(e[1])})),t.container.append("path").datum(t.graphDataReference).attr("d",t.graphLine).attr("stroke","lightgrey").attr("stroke-width",15).attr("fill","none"),t.container.append("path").datum(t.graphDataActual).attr("d",t.graphLine).attr("stroke","steelblue").attr("stroke-width",5).attr("fill","none"),this.reversalTimes&&[t.timeExtent[0]].concat(this.reversalTimes).forEach((e=>{var i=t.xScale(e),n=t.yScale(t.extent[1][0]),s=t.yScale(t.extent[1][1]);t.container.append("path").attr("d",d3.line()([[i,n],[i,s]])).attr("stroke","steelblue").attr("stroke-dasharray","1 5").attr("stroke-width",1).attr("fill","none")}))}}},mounted:function(){this.$nextTick((function(){this.drawChart()}))},watch:{graphData:function(){this.$nextTick((function(){this.drawChart()}))}}},fit20.components.sensorresults={template:'\n  <div>\n    <div class="sensorResults">\n        <table class="w-100">\n          <thead>\n            <tr>\n              <th rowspan="2">\n                <button type="button" class="btn btn-warning btn-icon" @click="finish">\n                  <i class="fas fa-times"></i>\n                </button>\n              </th>\n              <th class="border-0"></th>\n              <th class="border-0"></th>\n              <th colspan="3" class="border-bottom border-secondary">{{ $t(\'M0930\') }}</th>\n            </tr>\n            <tr>\n              <th colspan="2"></th>\n              <th>{{ $t(\'M0931\') }}</th>\n              <th>{{ $t(\'M0932\') }}</th>\n              <th>{{ $t(\'M0933\', {nr: 5}) }}</th>\n            </tr>\n          </thead>\n          <tr v-for="stats, index in exerciseStats" :class="stats.css_classes" class="font-weight-bold">\n            <td><img :src="stats.img_src" :alt="index"></td>\n            <td class="text-left score"><span :class="stats.css_classes">{{ $t(stats.label) }}</span></td>\n            <td><span class="score">{{ stats.score }}</span></td>\n            <td>\n              <span :class="max_score_class(stats.score, stats.all_weights)">\n              {{ newHighest(stats.all_weights, stats.score) }}\n              </span>\n            </td>\n            <td>\n              <span :class="max_score_class(stats.score, stats.same_weight)">\n              {{ newHighest(stats.same_weight, stats.score) }}\n              </span>\n            </td>\n            <td>\n              <span :class="max_score_class(stats.score, stats.last_5_weeks)">\n              {{ newHighest(stats.last_5_weeks, stats.score) }}\n              </span>\n            </td>\n          </tr>\n        </table>\n    </div>\n    <sensorresults_graph\n      :graphData="graphData"\n      :reversalTimes="reversalTimes"\n      :member="member"\n    ></sensorresults_graph>\n  </div>\n  ',components:{sensorresults_graph:fit20.components.sensorresults_graph},props:["member","average","tempo","rhythm","range","graphData","reversalTimes","exercise","sessions"],methods:{newHighest:function(e,t){return e?t>e?t:e:t||0},max_score_class:function(e,t){return e>t?"new_personal_best":e==t?"personal_best":""},finish:function(){fit20.log(`* clicked finishExercise for ${this.member.fullName}`);var e=this;fit20.sensors.finishExercise(fit20.store.state.currentStudio.id,e.member.id).catch((function(e){})).then((function(){e.$emit("finish_exercise")}))}},computed:{exerciseStats:function(){if(this.exercise&&this.sessions){var e=this.exercise.machineId,t=this.exercise.weight,i=this.sessions,n=function(e,t){return isEmpty(e)?0:Math.round(Math.max.apply(Math,e.map((function(e){return e&&e[t]})).filter((function(e){return isDefined(e)}))))},s=function(e,t){return t.exercises.find((function(t){return isDefined(t)&&t.machineId==e}))},r=i.filter((function(e){return isDefined(e.exercises)})).map((function(t){return s(e,t)})).filter(isDefined),a=r.filter((function(e){return e.weight==t})),o=(new Date).getTime()-3024e6,c=i.filter((function(e){return isDefined(e.exercises)&&Date.parse(e.date)>o})).map((function(t){return s(e,t)})).filter(isDefined);return{average:{css_classes:"average",img_src:"images/icon-award.svg",label:"M0901",all_weights:n(r,"qs_average"),same_weight:n(a,"qs_average"),last_5_weeks:n(c,"qs_average"),score:this.average},tempo:{css_classes:"tempo",img_src:"images/icon-tempo.svg",label:"M0902",all_weights:n(r,"qs_tempo"),same_weight:n(a,"qs_tempo"),last_5_weeks:n(c,"qs_tempo"),score:this.tempo},rhythm:{css_classes:"rhythm",img_src:"images/icon-rhythm.svg",label:"M0903",all_weights:n(r,"qs_rhythm"),same_weight:n(a,"qs_rhythm"),last_5_weeks:n(c,"qs_rhythm"),score:this.rhythm},range:{css_classes:"range",img_src:"images/icon-range.svg",label:"M0904",all_weights:n(r,"qs_range"),same_weight:n(a,"qs_range"),last_5_weeks:n(c,"qs_range"),score:this.range}}}return{average:{all_weights:"-",same_weight:"-",last_5_weeks:"-",newScore:"-"},tempo:{all_weights:"-",same_weight:"-",last_5_weeks:"-",newScore:"-"},rhythm:{all_weights:"-",same_weight:"-",last_5_weeks:"-",newScore:"-"},range:{all_weights:"-",same_weight:"-",last_5_weeks:"-",newScore:"-"}}}}},fit20.components.sensorprogress={template:'\n    <div>\n      <div class="referencebar mb-1">\n        <span v-if="isRunning" class="overlay h4 m-0"><i class="fas fa-repeat-alt"></i>&nbsp;{{ repetition }}</span>\n        <span v-if="isStationary" class="overlay h4 m-0"><i class="far fa-hand-paper"></i></span>\n        <div class="progress" :class="referenceClass" :style="referenceStyle"></div>\n        <div class="calibra" :style="{ left : calcPosition(0)}"></div>\n        <div class="calibra" :style="{ left : calcPosition(1)}"></div>\n        <div class="before" :style="{ width : calcPosition(0)}"></div>\n        <div class="center" :style="{ width : calcPosition(0.8)}"></div>\n        <div class="after" :style="{ width : calcPosition(0)}"></div>\n      </div>\n      <div class="progressbar">\n        <span class="overlay h4 m-0">{{ count }}</span>\n        <div class="progress" :style="progressStyle"></div>\n        <div class="calibra" :style="{ left : calcPosition(0)}"></div>\n        <div class="calibra" :style="{ left : calcPosition(1)}"></div>\n        <div class="before" :style="{ width : calcPosition(0)}"></div>\n        <div class="before-text">{{ beforeContent }}</div>\n        <div class="center" :style="{ width : calcPosition(0.8)}"></div>\n        <div class="after" :style="{ width : calcPosition(0)}"></div>\n        <div class="after-text">{{ afterContent }}</div>\n      </div>\n    </div>\n  ',props:["count","actual_position","reference_position","tracking","repetition","colorScheme"],data:function(){return{slack:.2,maxTracking:0,trackingIndexFactor:0,colorTableSize:40,colorTable:[]}},methods:{calcPosition:function(e){var t=(e+this.slack)/(1+2*this.slack)*100;return Math.max(0,Math.min(100,t))+"%"},trackingColor:function(e,t){var i=t.findIndex((t=>t.tracking>e));if(0==i)return t[0].color;if(i<0)return t[t.length-1].color;var n=i-1,s=t[i],r=t[n],a=(e-r.tracking)/(s.tracking-r.tracking),o=[{color:r.color,weight:1-a},{color:s.color,weight:a}],c={r:0,g:0,b:0},l=0;for(var m of o)c.r+=parseInt(m.color.substr(1,2),16)*m.weight,c.g+=parseInt(m.color.substr(3,2),16)*m.weight,c.b+=parseInt(m.color.substr(5,2),16)*m.weight,l+=m.weight;var d=e=>{var t=Math.round(e).toString(16);return 0==t.length?"00":1==t.length?"0"+t:t};return"#"+(d(c.r/l)+d(c.g/l)+d(c.b/l))}},computed:{referenceStyle:function(){return{width:this.calcPosition(this.reference_position)}},referenceClass:function(){return 0==this.repetition?"bg-secondary":this.repetition>0?"bg-info":"bg-darkshade"},progressStyle:function(){var e=Math.ceil(this.trackingIndexFactor*Math.min(this.maxTracking,Math.abs(this.tracking)));return{"background-color":this.colorTable[e],width:this.calcPosition(this.actual_position)}},beforeContent:function(){return this.actual_position<0-this.slack?"<<":""},afterContent:function(){return this.actual_position>1+this.slack?">>":""},isRunning:function(){return this.repetition>0},isStationary:function(){return this.repetition<0}},mounted:function(){this.colorTable=[],this.maxTracking=this.colorScheme[this.colorScheme.length-1].tracking,this.trackingIndexFactor=this.colorTableSize/this.maxTracking;for(var e=0;e<=this.colorTableSize;++e)this.colorTable[e]=this.trackingColor(e/this.trackingIndexFactor,this.colorScheme)}},fit20.components.sensorheader={template:'\n    \x3c!-- Loading indicator and button to switch between sensor and member info. --\x3e\n    <div class="sensor_header mb-2" v-if="visible_sensor">\n      <button v-if="panelMode == \'connecting\'" type="button"\n        class="btn btn-warning btn-icon mx-1"\n        @click="$emit(\'retry\')"\n      >\n        <span>{{ $t(\'M0041\') }}</span>\n        <i class="fa fa-rss fa-spin"></i>\n      </button>\n    </div>\n  ',props:["member","panelMode","visible_sensor","machine_has_sensor"]},fit20.components.sensorcontrols={template:'\n    <div class="sensor_controls">\n      <button type="button" class="btn" :class="calibrationStartStyle" @click="calibrate(0)">\n        <i class="fas fa-step-backward"></i>\n      </button>\n      <button type="button" class="btn" :class="calibrationEndStyle" @click="calibrate(1)">\n        <i class="fas fa-step-forward"></i>\n      </button>\n      <span v-if="!isCalibrated[0] || !isCalibrated[1]"> {{ $t(\'M0920\') }} </span>\n      <button v-if="isExerciseStarted" type="button" class="btn btn-primary ml-4 px-4" @click="stationary">\n        <span>10</span>\n      </button>\n      <button v-if="panelMode == \'connecting\'" type="button"\n        class="btn btn-warning btn-icon mx-1 float-right"\n        @click="$emit(\'retry\')"\n      >\n        <span v-if="visible_sensor">{{ $t(\'M0041\') }}</span>\n        <i class="fa fa-rss fa-spin"></i>\n      </button>\n      <button type="button"\n        class="btn btn-warning btn-icon float-right"\n        v-if="visible_sensor"\n        @click="$emit(\'close\')"\n       >\n        <i class="fas fa-times"></i>\n      </button>\n    </div>\n  ',props:["member","panelMode","visible_sensor","isCalibrated","isExerciseStarted"],methods:{calibrate:function(e){fit20.log(`* Sensor calibrate ${e?"end":"start"} for ${this.member.fullName}`),fit20.sensors.calibrate(fit20.store.state.currentStudio.id,this.member.id,e).then((function(){fit20.log("* Sensor calibrate succeeded.")})).catch((function(e){fit20.log(`! Sensor calibrate failed: ${JSON.stringify(e)}`)}))},restart:function(){fit20.log("! Sensor restart should not be used"),fit20.sensors.restartExercise(fit20.store.state.currentStudio.id,this.member.id).catch((function(e){fit20.log(`! restart failed: ${JSON.stringify(e)}`)}))},stationary:function(){fit20.sensors.stationaryExercise(fit20.store.state.currentStudio.id,this.member.id).catch((function(e){fit20.log(`! stationary failed: ${JSON.stringify(e)}`)}))}},computed:{calibrationStartStyle:function(){return this.isCalibrated[0]?"btn-primary":"btn-danger"},calibrationEndStyle:function(){return this.isCalibrated[1]?"btn-primary":"btn-danger"}}};const qs={reversalTolerance:.4,calculateReversalIndexes:function(e){const t=qs.reversalTolerance,i=1-t;for(var n=[],s=0,r=1;r<e.length;++r){var a=e[r-1],o=e[r],c=r==e.length-1;if(a.ref<=t&&(o.ref>t||c&&1==qs.trendAtEnd(e))){if(s>0){var l=qs.findReversal(-1,e.map((e=>e.act)),s,r);n.push(l)}}else if(a.ref<=i&&(o.ref>i||c&&1==qs.trendAtEnd(e)))s=r;else if(a.ref>=i&&(o.ref<i||c&&-1==qs.trendAtEnd(e))){l=qs.findReversal(1,e.map((e=>e.act)),s,r);n.push(l)}else a.ref>=t&&(o.ref<t||c&&-1==qs.trendAtEnd(e))&&(s=r)}return n},trendAtEnd:function(e){var t=e[e.length-1].act;for(i=e.length-2;i>=0;--i){var n=e[i].act;if(n>t)return-1;if(n<t)return 1}return 0},findReversal:function(e,t,i,n){for(;i<n;){for(var s=Math.floor((i+n)/2),r=0,a=0,o=i;o<=s;++o)r+=t[o];for(o=s+1;o<=n;++o)a+=t[o];r/=s+1-i,a/=n-s,(e>0?r>a:r<a)?n=s:i=s+1}return i},tempoPenaltyTable:[[.1,0],[.2,5],[.3,10],[.5,15],[.7,20],[1,30],[1.5,40],[2,50],[2.5,60],[3,70],[4,80],[5,90],[Number.POSITIVE_INFINITY,100]],calculateTempoScore:function(e,t,i){for(var n=[],s=0;s<i.length;++s){var r=10*(s+1),a=t[i[s]].time,o=Math.abs(r-a),c=qs.tempoPenaltyTable.find((e=>e[0]>=o))[1];n.push(100-c),console.info(`tempo ${s}: timeDiff=${Math.round(10*o)/10}sec, penalty=${c}`)}return console.info(`tempo HR scores: ${n.join(", ")}`),0==n.length?0:n.reduce(((e,t)=>e+t))/n.length},rangePenaltyTable:{mg0:[[-30,100],[-25,90],[-22,80],[-19,70],[-16,60],[-13,50],[-10,40],[-7,30],[-3,15],[-2,10],[-1,5],[1,0],[2,5],[3,10],[5,15],[7,20],[10,30],[13,40],[16,50],[19,60],[22,70],[25,80],[30,90],[Number.POSITIVE_INFINITY,100]],mg1:[[-30,100],[-25,90],[-22,80],[-19,70],[-16,60],[-13,50],[-10,40],[-7,30],[-3,15],[-2,10],[-1,5],[1,0],[2,5],[3,10],[5,15],[7,20],[10,30],[13,40],[16,50],[19,60],[22,70],[25,80],[30,90],[Number.POSITIVE_INFINITY,100]]},rangeHrScoreWeight:{mg0:[100],mg1:[100,100,100,100,75,75,50,50,0]},calculateRangeScore:function(e,t,i){for(var n=[],s=0;s<i.length;++s){var r=(s+1)%2,a=t[i[s]].act,o=100*(s%2?a-r:r-a),c=qs.rangePenaltyTable[e].find((e=>e[0]>=o))[1];n.push(100-c),console.info(`range ${s}: positionDiff=${Math.round(10*o)/10}%, penalty=${c}`)}if(console.info(`range HR scores: ${n.join(", ")}`),0==n.length)return 0;var l=n.reduce(((t,i,n)=>{var s=qs.rangeHrScoreWeight[e],r=s[Math.min(n,s.length-1)];return[t[0]+i*r,t[1]+r]}),[0,0]);return l[0]/l[1]},rhythmPenaltyTable:{mg0:[[1,0],[2,5],[3,10],[5,15],[7,20],[10,30],[13,40],[16,50],[19,60],[22,70],[25,80],[30,90],[Number.POSITIVE_INFINITY,100]],mg1:[[1,0],[2,5],[3,10],[5,15],[7,20],[10,30],[13,40],[16,50],[19,60],[22,70],[25,80],[30,90],[Number.POSITIVE_INFINITY,100]]},rhythmHrScoreWeight:{mg0:[100],mg1:[100,100,100,100,75,75,50,50,0]},calculateRhythmScore:function(e,t,i){for(var n=[],s=i[i.length-1],r=0;r<s;++r){var a=t[r],o=a.time%10;if(o>2&&o<8){var c=Math.floor(a.time/10),l=100*Math.abs(a.ref-a.act);l>(n[c]||0)&&(n[c]=l)}}var m=n.map(((t,i)=>{var n=qs.rhythmPenaltyTable[e].find((e=>e[0]>=t))[1];return console.info(`rhythm ${i}: maxDivergence=${Math.round(10*t)/10}%, penalty=${n}`),100-n}));if(console.info(`rhythm HR scores: ${m.join(", ")}`),0==m.length)return 0;var d=m.reduce(((t,i,n)=>{var s=qs.rhythmHrScoreWeight[e],r=s[Math.min(n,s.length-1)];return[t[0]+i*r,t[1]+r]}),[0,0]);return d[0]/d[1]},calculateTotalQualityScore:function(e){return(30*e.tempo+40*e.range+30*e.rhythm)/100},graphData:function(e,t){var i=[];if(e.length>0)for(var n=e[0].time,s=0;s<e.length;++s)e[s].time>=n&&(i.push([e[s].time,e[s].act,e[s].ref]),n+=t);return i},reversalTimes:function(e,t){return t.map((t=>e[t].time))}};fit20.components.sensor={template:'\n    <div class="sensor_panel pl-2 pb-1 mb-1 border-bottom"\n      v-if="visible_sensor"\n    >\n      <sensorcontrols class="mb-1"\n        v-if="panelMode === \'progress\'"\n        :member="member"\n        :panelMode="panelMode"\n        :visible_sensor="visible_sensor"\n        :isCalibrated="isCalibrated"\n        :isExerciseStarted="isExerciseReallyStarted"\n        @close="closeSensorPanel"\n        @retry="retryConnectSensor"\n      ></sensorcontrols>\n      <sensorprogress\n        :count="count"\n        :actual_position="actual_position"\n        :reference_position="reference_position"\n        :tracking="tracking"\n        :repetition="repetition"\n        :colorScheme="colorScheme"\n        v-if="panelMode === \'progress\'"\n      ></sensorprogress>\n      <sensorresults\n        v-if="panelMode === \'results\'"\n        :member="member"\n        :average="average"\n        :tempo="tempo"\n        :rhythm="rhythm"\n        :range="range"\n        :graphData="graphData"\n        :reversalTimes="reversalTimes"\n        :exercise="exercise"\n        :sessions="sessions"\n        @finish_exercise="finishExercise"\n      ></sensorresults>\n    </div>\n  ',components:{sensorheader:fit20.components.sensorheader,sensorprogress:fit20.components.sensorprogress,sensorcontrols:fit20.components.sensorcontrols,sensorresults:fit20.components.sensorresults,sensorresultcontrols:fit20.components.sensorresultcontrols},props:["machine","member","exercise","sessions","adjustableSettings","visible_sensor","panelId","isExerciseStarted"],data:function(){return{count:"",actual_position:0,reference_position:0,tracking:0,repetition:0,colorScheme:[{tracking:.05,color:"#92D400"},{tracking:.07,color:"#DDDD00"},{tracking:.1,color:"#EECC00"},{tracking:.13,color:"#FF9900"},{tracking:.2,color:"#EE5500"}],isSensorConnected:!1,memberUsesMachineSensor:!1,isCalibrated:[!1,!1],panelMode:"none",average:0,tempo:0,rhythm:0,range:0,graphData:[]}},methods:{errorHandler:function(e,t,i){var n=`M0915: ${t=stringify(t)}\n${scope.member.fullName}, ${scope.machine.longName}`;fit20.app.addAlert(e,n,i),fit20.log(`!! Sensor errorHandler closes sensor panel ${this.displayMemberAndMachine} after error: ${t}`),fit20.logServer(n,"sensor errorHandler",2),this.closeSensorPanel("error")},stateHandler:function(e){isDefined(e.isCalibrated)&&(Vue.set(this.isCalibrated,0,e.isCalibrated[0]),Vue.set(this.isCalibrated,1,e.isCalibrated[1])),e.stopSensor&&this.closeSensorPanel("stateHandler(state.stopSensor)")},dataHandler:function(e){isUndefined(e)&&(e={}),"progress"!=this.panelMode&&"results"!=this.panelMode&&isDefined(e.count)&&(fit20.log(`* Sensor dataHandler showing progress ${this.displayMemberAndMachine}.`),this.panelMode="progress"),this.count=e.count,this.actual_position=e.actual_position||0,this.reference_position=e.reference_position||0,this.tracking=e.tracking||0,this.repetition=e.repetition||0},resultHandler:function(e){isDefined(e)&&(this.panelMode="results"),isDefined(e)&&isDefined(e.average)?(fit20.log(`* Sensor resultHandler showing results ${this.displayMemberAndMachine}.`),(0==e.average||e.tempo<5||e.rhythm<5)&&(fit20.log(`! Incorrect sensor results: ${stringify(e)}`),fit20.logServer("Incorrect sensor results","sensor.js resultHandler",2)),["average","tempo","rhythm","range"].forEach((function(t){e[t]=Math.round(e[t]),this[t]=e[t]}),this),this.$emit("sensor_results",e),this.graphData=e.graphData,this.reversalTimes=e.reversalTimes):(fit20.log(`* Sensor resultHandler resetting results ${this.displayMemberAndMachine}.`),["average","tempo","rhythm","range"].forEach((function(e){this[e]=0}),this),this.graphData=[],this.reversalTimes=void 0),this.repetition=0},finishExercise:function(){fit20.log(`* Sensor: Finish exercise ${this.displayMemberAndMachine}.`),this.$emit("finish_exercise")},retryConnectSensor:function(e){isUndefined(e)&&(e=0);var t=this;fit20.sensors&&fit20.sensors.finishExercise&&(fit20.log(`! Sensor: finish and retry to connect ${t.displayMemberAndMachine}`),fit20.sensors.finishExercise(fit20.store.state.currentStudio.id,this.member.id).catch((()=>{})).then((function(){fit20.log(`! Sensor: retry ${e} to connect ${t.displayMemberAndMachine}`),t.connectSensor(e)})))},connectSensor:function(e){isUndefined(e)&&(e=0);var t=this,i=$("#"+this.panelId);fit20.app.startLoading(!0,i),fit20.log(`* Sensor: connectSensor ${this.displayMemberAndMachine} in panel ${this.panelId}`);var n=this.member,s=this.machine;this.panelMode="connecting",fit20.sensors.configureExercise(this.studioId,s.id,n,this.errorHandler,this.stateHandler,this.dataHandler,this.resultHandler,{retries:e,colorScheme:this.colorScheme}).then((function(e){return fit20.log(`* Sensor: configured ${t.displayMemberAndMachine}: ${stringify(e||"OK")}`),t.dataHandler(),t.resultHandler(),t.isSensorConnected=!0,t.$emit("visibility_toggle",t.showSensor),e})).then((function(e){fit20.log(`* Sensor: connectSensor connected ${t.displayMemberAndMachine}.`),t.panelMode="progress"})).catch((function(i){return fit20.log(`! Sensor: connectSensor cannot configure ${t.displayMemberAndMachine}: ${stringify(i)}`),t.panelMode="none",fit20.app.addAlert("error",`M0915: ${i}\n${t.displayMemberAndMachine}`,[{callback:function(){t.closeSensorPanel("configure error")}},{text:$t("M0041"),callback:function(){t.retryConnectSensor(e+1)}}])})).catch((()=>{})).then((function(){fit20.app.stopLoading(!0,i)}))},closeSensorPanel:function(e){fit20.log(`* Sensor: closing panel ${this.displayMemberAndMachine} ${e?"because "+e:""}`);var t=this,i=function(){t.$emit("visibility_toggle",!1),t.isSensorConnected=!1,t.repetition=0};fit20.sensors&&fit20.sensors.finishExercise?fit20.sensors.finishExercise(fit20.store.state.currentStudio.id,this.member.id).catch((function(e){fit20.log(`! Sensor: closeSensorPanel cannot finishExercise, ${e}`)})).then((function(){i()})):i()},updateSensorAfterChange:function(e){fit20.sensors.active&&(this.panelMode="none",this.isSensorConnected=!1,this.machine&&this.adjustableSettings&&this.adjustableSettings[this.machine.id]?this.memberUsesMachineSensor="M0030"==this.adjustableSettings[this.machine.id]["^0081"]:this.memberUsesMachineSensor=!1,fit20.log(`* Sensor: update after change in ${e}, ${this.displayMemberAndMachine}.  memberUsesMachineSensor=${this.memberUsesMachineSensor}`),this.isCalibrated=[!1,!1],this.memberUsesMachineSensor?this.connectSensor():this.closeSensorPanel("Member does not use sensor"))}},computed:{studioId:function(){return fit20.store.state.currentStudio.id},displayMemberAndMachine:function(){return" "+(this.member?`${this.member.fullName} (${this.member.id})`:"<no member>")+" / "+(this.machine?`${this.machine.longName} (${this.machine.id})`:"<no selected machine>")},expectSensor:function(){var e=fit20.sensors.active&&this.memberUsesMachineSensor;return e||this.closeSensorPanel(`!sensorExpected, sensors.active=${fit20.sensors.active} && memberUsesMachineSensor=${this.memberUsesMachineSensor}`),e},showSensor:function(){return fit20.sensors.active&&this.isSensorConnected&&this.memberUsesMachineSensor},isExerciseReallyStarted:function(){return fit20.log(`* Sensor: isExerciseReallyStarted ${this.displayMemberAndMachine}. isExerciseStarted=${this.isExerciseStarted} && repetition=${this.repetition}`),this.isExerciseStarted&&this.repetition>0},isSensorActiveChangeAllowed:function(){return!this.isExerciseStarted&&0==this.repetition&&"results"!=this.panelMode}},watch:{machine:function(e){this.updateSensorAfterChange("machine")},adjustableSettings:{deep:!0,handler:function(e,t){this.isSensorActiveChangeAllowed&&this.machine&&(e&&e[this.machine.id]&&e[this.machine.id]["^0081"])!=(t&&t[this.machine.id]&&t[this.machine.id]["^0081"])&&this.updateSensorAfterChange("adjustableSettings.sensor")}}}},fit20.components.trainercontrols={template:'\n    <footer class="footer py-1">\n      <div class="container-fluid">\n        <div class="row align-items-center">\n\n          <div class="col-1" title="Left thumb of trainer goes here.">\n            <span style="position: absolute; font-size: 65%;">\n              <span v-if="appNeedsUpdate" class="text-white bg-danger">{{ $t(\'L0102\') }}</span>\n              <span class="text-gray">{{ appServer }}<br>{{ appVersion }}</span>\n            </span>\n            <img class="loading-spinner bg-light" src="images/spinner.svg" style="visibility: hidden;"/>\n            &#xA0;\n          </div>\n\n          <div class="col-10 d-flex justify-content-between hide-during-loading">\n            <button class="btn btn-primary align-middle" @click="reportProblem">\n              <i class="fas fa-exclamation-triangle"></i>\n              <div class="small">{{ $t(\'M0238\') }}</div>\n            </button>\n            <slot>\x3c!-- Specific trainer controls go here. --\x3e</slot>\n            <div v-if="showtrainer">\n              <button type="button" class="btn btn-outline-primary ifSignedOut" id="signinButton"\n                onclick="fit20.app.signin()"\n              >\n                <i class="fa fa-sign-in"></i>\n                <div class="small">{{ $t(\'M0106\') || \'Login\' }}</div>\n              </button>\n              <button type="button" class="btn btn-outline-primary ifSignedIn" id="signoutButton"\n                @click="signOut"\n              >\n                <i class="fas fa-sign-out"></i>\n                <div class="small">{{ $t(\'M0102\') || \'Logout\' }}</div>\n              </button>\n              <button type="button" class="btn btn-outline-primary ifSignedIn"\n                  @click="editTrainer"\n              >\n                <div>\n                  <div class="small" style="max-width: 12em; overflow: hidden; text-overflow: ellipsis;" :title="userInfo.name">{{ trainerName }}</div>\n                  <div class="small">({{ $t(userInfo.role || \'M0009\') }})</div>\n                </div>\n              </button>\n            </div>\x3c!-- v-if="showtrainer" --\x3e\n            \x3c!--div v-else=""></div--\x3e\n          </div>\x3c!-- .col-10 --\x3e\n\n          <div class="col-1" title="Right thumb of trainer goes here." style="text-align: right;">\n            <img class="loading-spinner" src="images/spinner.svg" style="visibility: hidden;"/>\n            &#xA0;\n            <span :class="sensorStatus" class="icon icon-sensor"></span>\n          </div>\n\n        </div>\n      </div>\n    </footer>\n  ',props:["showtrainer"],methods:{editTrainer:function(){isDefined(fit20.store.state.currentTrainer)?(fit20.log("* Editing trainer info."),fit20.app.modal("trainer-edit")):alert(`${$t(fit20.app.userInfo.role||"M0009")} ${fit20.app.userInfo.email}`)},reportProblem:function(){fit20.app.startLoading("L0103"),html2canvas(document.getElementById("app")).then((function(e){fit20.app.screenshot=e.toDataURL()})).catch((function(e){fit20.log(`!! Cannot create a screenshot: ${e.toString()}`),fit20.app.screenshot=null})).then((function(e){fit20.app.stopLoading(!0),fit20.app.modal("trainer-problem")}))},signOut:function(){fit20.log(`* Trainer ${this.trainerName} (${fit20.app.userInfo.email}) signing out`),fit20.app.vue&&fit20.app.vue.isInSession()?fit20.app.addAlert("warning","M9034",[{text:$t("M0030"),callback:fit20.app.signout},{text:$t("M0031")}]):fit20.app.signout()}},computed:{appServer:function(){return window.appServer},appVersion:function(){var e=window.appVersion.replace(/[t.]\d.*/,"");return"null"==e&&(e="no_version"),e},appNeedsUpdate:function(){return fit20.appNeedsUpdate},userInfo:function(){return fit20.app.userInfo},trainer:function(){return isEmpty(fit20.store.state.currentTrainer)?{}:fit20.store.state.currentTrainer},trainerName:function(){return isEmpty(fit20.store.state.currentTrainer)?this.userInfo.name:this.trainer.contactName},sensorStatus:function(){return fit20.store.state.currentStudio?isEmpty(fit20.store.state.currentStudio.gatewayIPAddress)?"d-none":fit20.sensors.active?fit20.sensors.active<0?"text-warning":"text-primary":"text-danger":"d-none"}}},fit20.components.studios={template:'\n    <article>\n      <header class="container-fluid py-2"  v-if="countStudios > 4">\n        <div class="row no-gutters">\n          <div class="col-4">\n            <search-box v-model="studioFilter"></search-box>\n          </div>\n          <div class="col-7"></div>\n          <button class="col-1 btn btn-primary" @click="refresh"><i class="fas fa-sync"></i></button>\n        </div>\n        <div class="row" v-if="countStudios < 1">\n          <div class="card-holder empty-indicator ifUI ifSignedIn">{{ $t(\'M0091\') }}</div>\n        </div>\n      </header>\n      <section class="pt-2 d-flex flex-row">\n        <div class="container-fluid scrollable">\n          <div class="row custom-gutters" v-if="studiosNotLoaded">{{ $t(\'L0104\') }}</div>\n          <div id="studio-list" class="row card-gutters studios">\n            <div v-for="studio in listStudios"\n              class="card-holder"\n              :id="\'studio-\'+studio.id"\n              :title="studio.id"\n            >\n              <div class="card"\n                v-on:click="selectStudio(studio)"\n                role="button"\n              >\n                <div class="card-body studio-body">\n                  <div class="name">\n                    <h5 class="card-title">{{ studio.name  || \' \' }}</h5>\n                    <h6 class="card-subtitle">{{ studio.subName || \' \' }}</h6>\n                  </div>\n                  <div class="count">\n                    <span class="badge badge-primary">{{ studio.nrMembers }} <i class="fas fa-users"></i></span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <alphabetscroll v-if="countStudios > 14" :list="listStudios" :itemToName="itemToSortName" @scrollTo="scrollTo"></alphabetscroll>\n      </section>\n      <trainercontrols :showtrainer="true">\n        <button class="btn btn-primary text-white align-middle" onclick="fit20.refreshAll();">\n          <i class="fas fa-sync-alt"></i>\n          <div class="small">{{ $t(\'M0110\') || \'Reload\' }}</div>\n        </button>\n      </trainercontrols>\n    </article>\n  ',components:{trainercontrols:fit20.components.trainercontrols,alphabetscroll:fit20.components.alphabetscroll},data:function(){return{studioFilter:""}},methods:{refresh:function(){fit20.log("* Refreshing studios list"),fit20.get("studios")},selectStudio:function(e){fit20.app.vue.isInSession()?fit20.app.vue.currentStudio.id==e.id||fit20.app.addAlert("warning","M9034",[{text:$t("M0030"),callback:()=>this._selectStudio(e)},{text:$t("M0031")}]):this._selectStudio(e)},_selectStudio:function(e){fit20.log(`* Selecting studio ${e.name} ${e.subName}.`),fit20.app.vue.closeAllMemberTabs().then((function(){fit20.log("* selectStudio is switching studio"),fit20.store.commit("setMembers",void 0),fit20.store.commit("setCurrentStudio",e),fit20.app.vue.selectStudioId(e.id)}))},itemToSortName:function(e){return e.name},scrollTo:function(e){var t=$("#studio-"+e.id),i=t.closest("section").children(".scrollable");i.animate({scrollTop:t.offset().top-i.offset().top+i.scrollTop()},500)}},computed:{studiosNotLoaded:function(){return isUndefined(fit20.store.state.studios)},listStudios:function(){var e=fit20.store.state.studios||[],t=this.studioFilter.toLowerCase();return e.filter((function(e){return e.active&&(!t||(e.name||"").toLowerCase().indexOf(t)>=0||(e.subName||"").toLowerCase().indexOf(t)>=0)})).sort((function(e,t){return e.name.localeCompare(t.name)||e.subName.localeCompare(t.subName)}))},countStudios:function(){return isEmpty(fit20.store.state.studios)?0:fit20.store.state.studios.length},countActiveMembers:function(){var e=0,t=fit20.store.state.studios;for(i=0;i<t.length;i++)e+=t[i].nrMembers;return e}},mounted:function(){this.refresh()}},fit20.components.traineredit={template:'\n    <modal size="lg">\n      <template #title>{{ $t(\'M0009\') }}</template>\n            <input type="hidden" v-model="trainer.id">\n            <div class="container-fluid">\n              <div class="row trainer-modal">\n                <div class="col-8">\n                  <div class="form-group row">\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0318\') }}</label>\n                      <input type="text" class="form-control" v-model="trainer.firstName">\n                    </div>\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0319\') }}</label>\n                      <input type="text" class="form-control" v-model="trainer.intercalation">\n                    </div>\n                  </div>\n                  <div class="form-group row">\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0320\') }}</label>\n                      <input type="text" class="form-control" v-model="trainer.lastName">\n                    </div>\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0316\') }}</label>\n                      <select class="custom-select w-100" v-model="trainer.gender">\n                        <option value="M0038">{{ $t(\'M0038\') }}</option>\n                        <option value="M0330">{{ $t(\'M0330\') }}</option>\n                        <option value="M0329">{{ $t(\'M0329\') }}</option>\n                      </select>\n                    </div>\n                  </div>\x3c!-- end of form-group --\x3e\n                  <div class="form-group row">\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0336\') }}</label>\n                      <input type="date" class="form-control" v-model="trainer.birthDate">\n                    </div>\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0020\') }}</label>\n                      <input type="email" class="form-control" v-model="trainer.email" disabled="only allowed for admin">\n                    </div>\n                  </div>\x3c!-- end of form-group --\x3e\n                  <div class="form-group row">\n                    <div class="col-6 px-2">\n                      <label class="form-text">{{ $t(\'M0018\') }}</label>\n                      <select class="custom-select w-100" v-model="trainer.language">\n                        <option v-for="language in languages" :value="language.code">{{ language.name }}</option>\n                      </select>\n                    </div>\n                  </div>\x3c!-- end of form-group --\x3e\n                </div>\n                <div class="col-4">\n                  <div class="form-group row">\n                    <div class="col-12 px-2 border">\n                      <label class="form-text">{{ $t(\'M0062\') }}</label>\n                      <makephoto :subject="trainer" :callback="refreshTrainer" :embedded="true"></makephoto>\n                    </div>\n                  </div>\x3c!-- end of form-group --\x3e\n                </div>\n              </div>\n            </div>\n      <template #controls>\n            <button type="button" class="btn btn-primary" v-on:click="putTrainer()" data-dismiss="modal">{{ $t(\'M0028\') }}</button>\n      </template>\n    </modal>\n  ',components:{makephoto:fit20.components.makephoto},methods:{putTrainer:function(){""==this.trainer.birthDate&&delete this.trainer.birthDate,fit20.put("currentTrainer",this.trainer),fit20.i18n.setLanguage(this.trainer.language)},refreshTrainer:function(){fit20.get("currentTrainer",!0)}},computed:{trainer:function(){return isEmpty(fit20.store.state.currentTrainer)?{}:fit20.store.state.currentTrainer},languages:function(){return fit20.i18n.languages}}},fit20.components.trainerproblem={template:'\n    <modal size="lg" @open="clearReport" @close="clearReport">\n      <template #title>{{ $t(\'M0240\') }}</template>\n            <div class="container-fluid">\n              <div class="form-group row">\n                <div class="col-6 px-2">\n                  <label class="form-text">{{ $t(\'M0009\') }}</label>\n                  <input type="text" disabled="" class="form-control" v-model="trainer.contactName">\n                </div>\n                <div class="col-6 px-2">\n                  <label class="form-text">{{ $t(\'M0020\') }}</label>\n                  <input type="text" disabled="" class="form-control" v-model="trainer.email">\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row">\n                <div class="col-12 px-2 border">\n                  <label class="form-text">{{ $t(\'M0241\') }}</label>\n                  <textarea v-model="message"></textarea>\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row">\n                {{ $t(\'M0242\') }}\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row">\n                {{ $t(\'M0243\') }}\n              </div>\x3c!-- end of form-group --\x3e\n            </div>\n      <template #controls>\n            <button type="button" class="btn btn-primary" @click="sendReport()" data-dismiss="modal">{{ $t(\'M0013\') }}</button>\n      </template>\n    </modal>\n  ',data:function(){return{message:""}},computed:{trainer:function(){return isEmpty(fit20.store.state.currentTrainer)?{contactName:fit20.app.userInfo.name,email:fit20.app.userInfo.email}:fit20.store.state.currentTrainer}},methods:{sendReport:function(){var e=fit20.store.state.currentStudio?`studio ${fit20.store.state.currentStudio.name} ${fit20.store.state.currentStudio.subName} (${fit20.store.state.currentStudio.id})`:"<unknown studio>",t=`${this.trainer.contactName} (${this.trainer.id}) ${this.trainer.email} from ${e}`;fit20.log(`* Problem report sent by ${t}`),fit20.logServer(this.message,t,10,{screenshot:fit20.app.screenshot}),this.clearReport()},clearReport:function(){this.message=""}}},fit20.components.duojoinsplit={template:'\n    <modal @open="reset">\n      <template #title>{{ $t(\'M0332\') }}</template>\n      <div class="container-fluid">\n        <div class="row">\n          <div class="col-12">\n            <h5>{{ member.fullName }}</h5>\n          </div>\n        </div>\n        <div class="form-group row">\n          <div class="col-12">\n            <label class="form-text">{{ $t(\'M0451 \') }}</label>\n            <search-box v-model="memberFilter" class="mb-2"></search-box>\n            <div class="duo-scroll">\n              <label class="duo-partner"\n                v-for="member in listMembers"\n                v-if="notSelf(member.id)"\n                v-show="filtered(member)"\n              >\n                <input type="radio"\n                  name="duopicker"\n                  class="switch_2"\n                  :id="\'duolink-\'+member.id"\n                  :value="member.id"\n                  v-model="partnerId"\n                >\n                <span class="w-100">{{ member.fullName }}</span>\n              </label>\n            </div>\n          </div>\n        </div>\x3c!-- end of form-group --\x3e\n      </div>\n      <div v-if="hasInvalidDuoPartner" class="alert alert-danger">{{ $t(\'M9070\') }}</div>\n      <template #controls>\n        <button type="button" class="btn btn-primary"\n          @click="duoJoin" data-dismiss="modal"\n          v-if="partnerId && partnerId != oldPartnerId"\n        >\n          {{ $t(\'M0310\') }}\n        </button>\n        <button type="button"class="btn btn-warning"\n          @click="duoSplit" data-dismiss="modal"\n          v-if="hasDuoPartner"\n        >\n          {{ $t(\'M0312\') }}\n        </button>\n      </template>\n    </modal>\n  ',props:["selectedMember","listMembers"],data:function(){return{oldPartnerId:void 0,partnerId:void 0,isValidPartnerId:!1,memberFilter:""}},methods:{reset:function(){var e=this;Vue.nextTick((function(){if(e.partnerId=e.selectedMember?e.selectedMember.duoPartner:void 0,e.oldPartnerId=e.selectedMember?e.selectedMember.duoPartner:void 0,e.isValidPartnerId=!1,e.memberFilter="",e.oldPartnerId){var t=$("#duolink-"+e.oldPartnerId).closest("label");t.length>0&&(e.isValidPartnerId=!0,t[0].scrollIntoView())}}))},filtered:function(e){var t=this.memberFilter.toLowerCase();return e&&e.fullName.toLowerCase().indexOf(t)>=0},closeDuoTabs:function(){var e=this.partnerId&&fit20.store.state.members&&fit20.store.state.members[this.partnerId]?fit20.store.state.members[this.partnerId].duoPartner:void 0;fit20.app.vue.forgetMemberId(this.selectedMember.id),isDefined(this.oldPartnerId)&&fit20.app.vue.forgetMemberId(this.oldPartnerId),isDefined(this.partnerId)&&fit20.app.vue.forgetMemberId(this.partnerId),isDefined(e)&&fit20.app.vue.forgetMemberId(e)},duoJoin:function(){var e=this.closeDuoTabs;fit20.put("joinDuoPartner",[this.selectedMember.id,this.partnerId],(function(){e()}))},duoSplit:function(){var e=this.closeDuoTabs;fit20.put("splitDuoPartner",this.selectedMember.id,(function(){e()}))},notSelf:function(e){return this.member&&e!=this.member.id}},computed:{member:function(){return this.selectedMember?this.selectedMember:{}},hasDuoPartner:function(){return isDefined(this.selectedMember)&&isDefined(this.selectedMember.duoPartner)},hasInvalidDuoPartner:function(){return this.hasDuoPartner&&!this.isValidPartnerId&&this.oldPartnerId==this.partnerId}},watch:{selectedMember:function(){this.reset()}}},fit20.components.memberallremarks={template:'\n    <modal size="lg">\n      <template #title>{{ $t(\'M0341\', {name: member.fullName}) }}</template>\n      <div class="allremarks container-fluid">\n        <a href="" data-toggle="collapse" href="#CollapseR1" role="button" aria-expanded="false" aria-controls="collapseSessions">\n          <h5 class="text-primary">{{ $t(\'M0284\') }}</h5>\n        </a>\n        <div class="row collapse show" id="CollapseR1">\n          <div class="col-12 ordered pb-3">\n            <div v-for="(session, index) in sessionsWithRemarks" class="mb-1" :style="{ order: -index }">\n              <h6 class="mb-0 d-inline-block"><strong>{{ $t(\'M0006\') }} {{ session.number + member.nrPaperSessions }}</strong></h6>\n              <p class="d-inline-block">({{ session.date | dateFormat(\'short\') }})</p>\n              <p class="d-inline-block">({{ session.trainerInitials }})</p>\n              <p v-if="session.remark">{{ session.remark }}</p>\n              <p v-if="session.absentReason"><span class="text-danger">{{ $t(\'M0408\') | capitalize }}</span> {{ $t(session.absentReason) }}</p>\n              <template v-for="exercise in session.exercises">\n              <p v-if="exercise.remark">{{ machineName(exercise.machineId) }} - {{ exercise.remark }}</p>\n              </template>\n            </div>\n          </div>\n        </div>\n        <a href="" data-toggle="collapse" href="#CollapseR2" role="button" aria-expanded="false" aria-controls="CollapseR2">\n          <h5 class="text-primary">{{ $t(\'M0305\') }}</h5>\n        </a>\n        <div class="row ordered flex-row pb-3 collapse show" id="CollapseR2">\n          <div class="col-12" v-for="(remark, index) in member.remarks" :style="{ order: -index }">\n            <p>{{ remark }}</p>\n          </div>\n        </div>\n        <a href="" data-toggle="collapse" href="#CollapseR3" role="button" aria-expanded="false" aria-controls="CollapseR3">\n          <h5 class="text-primary">{{ $t(\'M0306\') }}</h5>\n        </a>\n        <div class="row ordered flex-row pb-3 collapse show" id="CollapseR3">\n          <div class="col-12" v-for="(aim, index) in member.aims" :style="{ order: -index }">\n             <p>{{ aim }}</p>\n      \t\t</div>\n        </div>\n        <a href="" data-toggle="collapse" href="#CollapseR4" role="button" aria-expanded="false" aria-controls="CollapseR4">\n          <h5 class="text-primary">{{ $t(\'M0307\') }}</h5>\n        </a>\n        <div class="row ordered flex-row pb-3 collapse show" id="CollapseR4">\n          <div class="col-12" v-for="(result, index) in member.results" :style="{ order: -index }">\n            <p>{{ result }}</p>\n          </div>\n        </div>\n      </div>\n    </modal>\n  ',props:["member","sessions"],methods:{machineName:function(e){if(e){var t=this.listStudioMachines.filter((function(t){return t.id==e}))[0];if(t)return t.name}}},computed:{sessionsWithRemarks:function(){return isEmpty(this.sessions)?[]:this.sessions.filter((function(e){return e.remark||e.absentReason||!isEmpty(e.exercises)&&e.exercises.some((function(e){return!isEmpty(e.remark)}))}))},listStudioMachines:function(){return fit20.store.state.studioMachines||[]}}},fit20.components.memberremarks={template:'\n    <modal @open="reset">\n      <template #title>{{ $t(messageTypeCode) }}</template>\n          <div class="modal-body-remarks">\n            <div class="container-fluid">\n              <div class="form-group row">\n                <div class="col-12">\n                  <textarea v-model="messageText" class="mt-1" placeholder="..."></textarea>\n                  <button type="button" class="btn btn-primary float-right"\n                    v-show="messageText != \'\'"\n                    @click="putRemarks" data-dismiss="modal">{{ $t(\'M0094\') }}</button>\n                </div>\n              </div>\n            </div>\n          </div>\n      <template #controls>\n          <div class="modal-body-remarks">\n            <div class="container-fluid">\n              <div class="form-group row ordered flex-row">\n                <div class="col-12 mt-1" v-for="(item, index) in messages" :style="{ order: -index }">\n                  <div class="form-group row">\n                    <div class="col-10">\n                      <textarea v-model="messages[index]"></textarea>\n                    </div>\n                    <div class="col-2">\n                      <button type="button" class="btn btn-primary btn-block mb-1" @click="changeRemark(item, index)" data-dismiss="modal">\n                        <i class="fas fa-check"></i>\n                      </button>\n                      <button type="button" class="btn btn-warning btn-block" @click="changeRemark(\'\', index)" data-dismiss="modal">\n                        <i class="fas fa-trash-alt"></i>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\x3c!-- form-group --\x3e\n            </div>\n          </div>\n      </template>\n    </modal>\n  ',props:["memberId","messages","messagesType","messageTypeCode"],data:function(){return{messageText:""}},methods:{reset:function(){this.messageText=""},putRemarks:function(){fit20.put("add"+this.messagesType,{memberId:this.memberId,text:this.remarkFull}),this.reset()},changeRemark:function(e,t){fit20.put("change"+this.messagesType,{memberId:this.memberId,index:t,text:e})}},computed:{remarkFull:function(){var e=new Date;return dateFormat(e,$t("L1001"))+": "+this.messageText}}},fit20.components.memberexercisedetails={template:'\n    <modal v-if="exercise && machine">\n      <template #title>{{ $t(\'M0801\') }} {{ exercise.order }}: {{ machine ? machine.name : $t(\'M0038\') }}</template>\n            <div class="container-fluid">\n              <div class="row">\n              <table class="table w-100 table-stripe bg-secondary text-white table-bordered" style="border-radius:5px; border-color:white;">\n                <tr>\n                  <td>\n                    <i class="fas fa-calendar-alt pr-1"></i>\n                      {{ date | dateFormat(\'long\') }}\n                  </td>\n                  <td class="text-right">\n                    <i class="fas fa-balance-scale pr-1"></i>\n                      {{ exercise.weight }} {{ machine ? machine.weightUnit : \'\' }}\n                  </td>\n                  <td class="text-right">\n                    <i class="fas fa-stopwatch pr-1"></i>\n                      {{ exercise.duration | showTime }}\n                  </td>\n                </tr>\n              </table>\n              </div>\n            </div>\n            <div class="mb-4 mt-2" v-if="exercise.qs_average > 0.0">\n              <table class="w-100 text-center font-weight-bold">\n                <tr style="height: 3em;">\n                  <td colspan="2" rowspan="2"><img src="images/icon-award.svg" alt="" style="width:8em;"></td>\n                  <td><img src="images/icon-tempo.svg" alt="" style="width:4em;"></td>\n                  <td class="font-weight-bold">{{ $t(\'M0902\') }}</td>\n                  <td class="text-danger">{{ exercise.qs_tempo | round }}</td>\n                </tr>\n                <tr style="height: 3em;">\n                  <td><img src="images/icon-rhythm.svg" alt="" style="width:4em;"></td>\n                  <td class="font-weight-bold">{{ $t(\'M0903\') }}</td>\n                  <td class="text-info">{{ exercise.qs_rhythm | round }}</td>\n                </tr>\n                <tr style="height: 3em;">\n                  <td colspan="2" class="font-weight-bold text-primary h2">{{ exercise.qs_average | round }}</td>\n                  <td><img src="images/icon-range.svg" alt="" style="width:4em;"></td>\n                  <td class="font-weight-bold">{{ $t(\'M0904\') }}</td>\n                  <td class="text-emphasis">{{ exercise.qs_range | round }}</td>\n                </tr>\n              </table>\n            </div>\n            <hr v-if="exercise.remark">\n            <div class="container-fluid" v-if="exercise.remark">\n              <h5 class="modal-title">{{ $t(\'M0815\') }}</h5>\n              <div class="row">\n                <div class="col-12">\n                  {{ exercise.remark }}\n                </div>\x3c!-- col --\x3e\n              </div>\x3c!-- row --\x3e\n            </div>\x3c!-- container-fluid --\x3e\n      <template #controls>\n      </template>\n    </modal>\n  ',props:["machine","exercise","date"]},fit20.components.memberedit={template:'\n    <modal size="lg" @open="reset">\n      <template #title>{{ isNewMember ? $t(\'M0212\') : $t(\'M0213\') }}</template>\n        <div class="container-fluid">\n          <div class="row">\n            <div class="col-12">\n              <div class="form-group row">\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0318\') }}</label>\n                  <input type="text" class="form-control" v-model="editedMember.firstName" id="editedMember.firstName">\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0319\') }}</label>\n                  <input type="text" class="form-control" v-model="editedMember.intercalation" id="editedMember.intercalation">\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0320\') }}</label>\n                  <input type="text" class="form-control" v-model="editedMember.lastName" id="editedMember.lastName">\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row">\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0336\') }}</label>\n                  <input type="date" class="form-control" id="editedMember.birthDate"\n                    max="2014-01-01"\n                    v-model="editedMember.birthDate"\n                  >\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0316\') }}</label>\n                  <select class="custom-select w-100" v-model="editedMember.gender" id="editedMember.gender">\n                    <option value="M0038">{{ $t(\'M0038\') }}</option>\n                    <option value="M0330">{{ $t(\'M0330\') }}</option>\n                    <option value="M0329">{{ $t(\'M0329\') }}</option>\n                  </select>\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row">\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0020\') }}</label>\n                  <input type="email" class="form-control" v-model="editedMember.email" id="editedMember.email">\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0040\') }}</label>\n                  <input type="tel" pattern="\\+?[0-9- ()]{10,}" class="form-control" v-model="editedMember.telephone" id="editedMember.telephone">\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row">\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0308\') }}</label>\n                  <div class="input-group">\n                    <input type="text" pattern="[-0-9.,]*" class="form-control" v-model="editedMember.length" id="editedMember.length">\n                    <div class="input-group-prepend">\n                    <div class="input-group-text">cm</div>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0309\') }}</label>\n                  <div class="input-group">\n                    <input type="text" pattern="[-0-9.,]*" class="form-control" v-model="editedMember.weight" id="editedMember.weight">\n                    <div class="input-group-prepend">\n                    <div class="input-group-text">kg</div>\n                    </div>\n                  </div>\n                </div>\n                <div class="col-3 px-2">\n                  <label class="form-text">{{ $t(\'M0331\') }}</label>\n                  <div v-if="editedMember.measureDate">{{ editedMember.measureDate | dateFormat(\'long\') }}</div>\n                  <div v-else>{{ $t(\'M0038\') }}</div>\n                </div>\n                <div class="col-1 px-2">\n                  <button type="button" class="btn btn-primary btn-icon mt-2" @click="showWeightHistory">\n                    <i class="fas fa-history"></i>\n                  </button>\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n              <div class="form-group row" v-if="showWeightSeries">\n                <table class="table table-sm table-dark">\n                  <tr>\n                    <td v-for="measureDate in editedMember.measureDates">{{ measureDate | dateFormat(\'long\') }}</td>\n                  </tr>\n                  <tr>\n                    <td v-for="weight in editedMember.weightSeries">{{ weight }} kg</td>\n                  </tr>\n                </table>\n              </div>\n              <div class="form-group row">\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0303\') }}</label>\n                  <input type="date" class="form-control" id="editedMember.membershipSince"\n                    min="2009-01-01"\n                    v-model="editedMember.membershipSince"\n                  >\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0333\') }}</label>\n                  <input type="date" class="form-control" v-model="editedMember.membershipUntil" id="editedMember.membershipUntil">\n                </div>\n                <div class="col-4 px-2">\n                  <label class="form-text">{{ $t(\'M0327\') }}</label>\n                  <input type="number" class="form-control" v-model="editedMember.nrPaperSessions" id="editedMember.nrPaperSessions">\n                </div>\n              </div>\x3c!-- end of form-group --\x3e\n            </div>\x3c!-- .col-12 --\x3e\n          </div>\x3c!-- .row --\x3e\n        </div>\x3c!-- .container-fluid --\x3e\n      <template #controls>\n        <button v-if="hasBeenEdited" type="button" class="btn btn-primary" v-on:click="putMember()" data-dismiss="modal">{{ $t(\'M0028\') }}</button>\n        <div v-if="!isNewMember && !hasBeenEdited">\n          <span class="mr-3" v-if="memberStatus == \'ACTIVE\'">{{ $t(\'M0412\') }} {{ $t(\'M0024\') }}</span>\n          <span class="mr-3" v-if="memberStatus == \'PROSPECT\'">{{ $t(\'M0212\') }}</span>\n          <span class="mr-3" v-if="memberStatus == \'ONHOLD\'">{{ $t(\'M0412\') }} {{ $t(\'M0089\') }}</span>\n          <span class="mr-3" v-if="memberStatus == \'INACTIVE\' || memberStatus == \'WITHDRAWN\'">{{ $t(\'M0413\') }} {{ $t(\'M0093\') }}</span>\n          \x3c!-- Put on hold. --\x3e\n          <button v-if="canSetOnHold()" type="button" class="btn btn-primary" @click="setMemberOnHold" data-dismiss="modal">{{ $t(\'M0461\') }}</button>\n          \x3c!-- Make member active. --\x3e\n          <button v-if="canSetActive()" type="button" class="btn btn-primary" @click="setMemberActive" data-dismiss="modal">{{ $t(\'M0459\') }}</button>\n          \x3c!-- Make ex-member. --\x3e\n          <button v-if="canSetInactive()" type="button" class="btn btn-primary" @click="setMemberInactive" data-dismiss="modal">{{ $t(\'M0460\') }}</button>\n        </div>\n      </template>\n    </modal>\n  ',props:["member"],data:function(){return{editedMember:{},hasBeenEdited:!1,isReset:!1,showWeightSeries:!1}},methods:{reset:function(){this.isReset=!0,this.editedMember=deepClone(fit20.app.formModel(this).editedMember,this.member)},putMember:function(){this.editedMember.weight=(this.editedMember.weight||"").toString().replace(",","."),this.editedMember.length=(this.editedMember.length||"").toString().replace(",","."),""==this.editedMember.birthDate&&delete this.editedMember.birthDate,""==this.editedMember.membershipSince&&delete this.editedMember.membershipSince,""==this.editedMember.membershipUntil&&delete this.editedMember.membershipUntil;var e=this;fit20.put("member",e.editedMember,(function(t){e.$emit("memberStored",t),fit20.memberStore.memberHasChanged()})).catch((function(e){fit20.app.addAlert("error",e)}))},canSetOnHold:function(){var e=this.member&&this.member.memberStatus;return isDefined(e)?"ACTIVE"==e:this.memberActive},canSetActive:function(){var e=this.member&&this.member.memberStatus;return isDefined(e)?"PROSPECT"==e||"WITHDRAWN"==e||"INACTIVE"==e||"ONHOLD"==e:!this.memberActive},canSetInactive:function(){var e=this.member&&this.member.memberStatus;return isDefined(e)?"PROSPECT"==e||"ACTIVE"==e||"ONHOLD"==e:this.memberActive},setMemberOnHold:function(){fit20.put("putMemberOnHold",this.member.id,(function(e){fit20.memberStore.memberHasChanged()}))},setMemberActive:function(){fit20.put("addMemberToStudio",this.member.id,(function(e){fit20.memberStore.memberHasChanged()}))},setMemberInactive:function(){window.confirm($t("M0088",{name:this.member.fullName}))&&fit20.put("removeMemberFromStudio",this.member.id,(function(e){fit20.memberStore.memberHasChanged()}))},showWeightHistory:function(){this.showWeightSeries=!this.showWeightSeries}},computed:{isNewMember:function(){return isUndefined(this.member)},memberStatus:function(){return this.member&&this.member.memberStatus},memberActive:function(){return this.member&&this.member.active}},watch:{member:{handler:function(){this.reset()},deep:!0},editedMember:{handler:function(){this.hasBeenEdited=!this.isReset,this.$nextTick((function(){this.isReset=!1}))},deep:!0}}},fit20.components.membereditphoto={template:'\n    <modal>\n      <template #title>{{ $t(\'M0335\') }}</template>\n      <makephoto :subject="member" :callback="refreshMember" :embedded="false"></makephoto>\n    </modal>\n  ',components:{makephoto:fit20.components.makephoto},props:["member"],methods:{refreshMember:function(){fit20.memberStore.refreshDetails(this.member.id)}}},fit20.components.editmembermachinesettings={template:'\n    <modal v-if="member && machine" size="lg" @open="reset" @close="clear">\n      <template #title>{{ $t(\'M0830\', {machine: machine.name}) }}</template>\n            <div class="container-fluid">\n              <div class="row" v-for="(adjustable, index) in adjustables">\n                <div class="col-12">\n                  <div class="form-group row">\n                    <label class="form-text col-4 px-2">{{ $t(adjustable.name) }}</label>\n                    <label class="form-text col-2 px-2"><span v-if="!$t(adjustable.initial).startsWith(\'-\')">({{ $t(adjustable.initial) }})</span></label>\n                    <select class="custom-select form-control col-6 px-2" v-model="settings.values[index]">\n                      <option value=""></option>\n                      <option v-for="value in adjustable.values.split(\' \')" :value="value">{{ $t(value) }}</option>\n                    </select>\n                  </div>\x3c!-- end of form-group --\x3e\n                </div>\x3c!-- col --\x3e\n              </div>\x3c!-- row --\x3e\n              <div class="row">\n                {{ $t(\'M0814\') }}\n                <textarea v-model="settings.remark"></textarea>\n              </div>\x3c!-- row --\x3e\n            </div>\x3c!-- container-fluid --\x3e\n      <template #controls>\n            <button type="button" class="btn btn-primary" @click="putMemberMachineSettings" data-dismiss="modal">{{ $t(\'M0028\') }}</button>\n      </template>\n    </modal>\n  ',props:["member","machine"],data:function(){return{settings:{values:[],remark:""}}},methods:{clear:function(){this.settings={values:[],remark:""}},reset:function(){this.settings=this.originalSettings()},originalSettings:function(){if(this.member&&this.machine){var e=fit20.store.state.memberMachineSettings[this.member.id],t=(isDefined(e)?e[this.machine.id]:void 0)||{},i={values:Array.isArray(t.values)?t.values.slice():[],remark:t.remark};return i.values=this.adjustables.map((function(e,t){return i.values[t]||""})),i}return{values:[],remark:""}},putMemberMachineSettings:function(){try{if(isDefined(this.machine.id)){var e=fit20.store.state.memberMachineSettings[this.member.id];e[this.machine.id]=this.settings,fit20.put("memberMachineSettings",e,void 0,this.member.id),this.$emit("settingsChanged")}}catch(t){fit20.app.addAlert("error",`M9590 (${t})\nM9698`),fit20.log(`!! Problem in putMemberMachineSettings: ${t}\n  mms=${JSON.stringify(e)}  this.machine=${JSON.stringify(this.machine)}`)}}},computed:{adjustables:function(){var e=this.machine;return e&&e.adjustableInitials?e.adjustableInitials.map((function(t,i){return{initial:t,name:e.adjustableParts[i],values:e.adjustableValues[i]}})):[]}},watch:{}},fit20.components.membersessionpopup={template:'\n    <modal>\n      <template #title>{{ $t(\'M0850\') }} {{ session.date | dateFormat(\'short\') }}</template>\n            <div class="block pb-5" v-if="session.absent">\n              <h5 class="modal-title pb-1">{{ $t(\'M0411\') }} {{ $t(session.absentReason) }}</h5>\n            </div>\n            <div class="block pb-5" v-if="session.remark">\n              <h5 class="modal-title pb-1">{{ $t(\'M0816\') }}</h5>\n              <span>{{ session.remark }}</span>\n            </div>\n      <template #controls>\n            <button type="button" class="btn btn-primary"\n              v-show="canedit" v-on:click="editSession(session)" data-dismiss="modal"\n            >{{ $t(\'M0346\') }}</button>\n      </template>\n    </modal>\n  ',props:["session","canedit"],methods:{editSession:function(e){this.$emit("editSession",e)}}},fit20.components.members={template:'\n    <article>\n      <header class="container-fluid py-2">\n        <div class="row no-gutters">\n          <div class="col-4">\n            <search-box v-model="memberFilter"></search-box>\n          </div>\n          <div class="col-6 pl-2">\n            <div class="checkbox">\n              <input type="checkbox" class="switch_1 ml-2" id="includeOnHoldMembersInput" v-model="includeOnHoldMembers">\n              <label for="includeOnHoldMembersInput">{{ $t(\'M0021\') }} {{ $t(\'M0089\') }}</label>\n              <input type="checkbox" class="switch_1 ml-4" id="orderByLastName" v-model="orderByLastName">\n              <label for="orderByLastName">{{ $t(\'M0027\') }} {{ $t(\'M0320\') }}</label>\n            </div>\n          </div>\n          <div class="col-2 text-right badges">\n            <div class="badge-group ml-2 flex-0">\n              <span class="badge badge-primary w-100">{{ countOnHoldMembers+countSoloMembers+countDuoMembers }} <i class="fa fa-users"></i></span>\n              <span class="badge w-100" :class="includeOnHoldMembers ? \'badge-primary\' : \'badge-secondary\'">{{ countOnHoldMembers }} <i class="fa fa-user-clock"></i></span>\n            </div>\n            <div class="badge-group ml-2 flex-0">\n              <span class="badge badge-primary w-100">{{ countSoloMembers }} <i class="fa fa-user"></i></span>\n              <span class="badge badge-primary w-100">{{ countDuoMembers }} <i class="fa fa-user-friends"></i></span>\n            </div>\n          </div>\n        </div>\n        <div class="row" v-if="countMembers < 1">\n          <div class="card-holder empty-indicator ifUI ifSignedIn">{{ $t(\'M0091\') }}</div>\n        </div>\n      </header>\n      <section class="pt-2 d-flex flex-row">\n        <div class="container-fluid scrollable">\n          <div class="row custom-gutters" v-if="membersNotLoaded">{{ $t(\'L0104\') }}</div>\n          <div id="member-list" class="row card-gutters members">\n            <div v-for="member in listVisibleMembers"\n                :id="\'member-\'+member.id"\n                class="card-holder"\n                :title="member.id"\n            >\n              <div class="card" v-bind:class="{ inactive: !member.active }">\n                <div class="user" v-on:click="selectMember(member)">\n                  <figure>\n                    <img v-bind:src="member.thumbnail" alt="">\n                  </figure>\n                  <div class="name">\n                    <h5 class="card-title">{{ member.firstName || \' \' }}</h5>\n                    <h6 class="card-subtitle">{{ member.intercalation | appendIfNotEmpty(\' \') }}{{ member.lastName || \' \' }}</h6>\n                  </div>\n                </div>\n                <div class="status" v-on:click="duoJoinSplit(member)">\n                  <i style="font-size: 150%" :class="memberIconClasses(member)"></i>\n                  <div class="duo-name" v-if="member.duoPartner">\n                    {{ duoPartnerName(member) || \' \' }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <alphabetscroll :list="listVisibleMembers" :itemToName="itemToSortName" @scrollTo="scrollTo"></alphabetscroll>\n      </section>\n      <trainercontrols :showtrainer="true">\n        <button\n          type="button"\n          class="btn ifSignedIn"\n          :class="[sensorStatusClass]"\n          @click="sensorPopup"\n        >\n          <span class="icon icon-sensor"></span>\n        </button>\n        <button\n          type="button"\n          class="btn btn-primary ifSignedIn"\n          v-on:click="addMember()"\n        >\n          <i class="fas fa-user-plus"></i>\n          <div class="small">{{ $t(\'M0212\') }}</div>\n        </button>\n      </trainercontrols>\n      <duojoinsplit :selectedMember="selectedMember" :listMembers="listActiveMembers" id="duo-form"></duojoinsplit>\n      <memberedit :member="undefined" id="newmember-form" :ref="newMemberRef" @memberStored="selectMember"></memberedit>\n      <component :is="sensorconnect" :studio="studio" id="sensor-connect-popup"></component>\n    </article>\n  ',components:{memberedit:fit20.components.memberedit,duojoinsplit:fit20.components.duojoinsplit,alphabetscroll:fit20.components.alphabetscroll,trainercontrols:fit20.components.trainercontrols},props:["studio","sensorconnect"],data:function(){return{memberFilter:"",includeOnHoldMembers:!1,orderByLastName:!1,countSoloMembers:0,countDuoMembers:0,countOnHoldMembers:0,selectedMember:void 0}},methods:{sensorPopup:function(){fit20.app.modal("sensor-connect-popup")},duoPartnerInStudio:function(e){var t=e&&e.duoPartner;return t?this.listActiveMembers.filter((function(e){return e.id==t}))[0]:void 0},duoPartnerName:function(e){var t=this.duoPartnerInStudio(e);return t?t.firstName:$t("M9070")},memberIconClasses:function(e){return e&&e.duoPartner&&isUndefined(this.duoPartnerInStudio(e))?["text-danger"].concat(memberIconClasses(e)):memberIconClasses(e)},selectMember:function(e){fit20.log(`* Selecting member ${e.fullName} (${e.id}) ${e.duoPartner?"with":"without"} duo-partner`),fit20.app.vue.selectMemberId(e.id)},addMember:function(){fit20.app.modal("newmember-form")},duoJoinSplit:function(e){this.selectedMember=e,fit20.app.modal("duo-form")},itemToSortName:function(e){return this.orderByLastName?e.lastName:e.firstName},scrollTo:function(e){try{var t=$("#member-"+e.id),i=t.closest("section").children(".scrollable");i.animate({scrollTop:t.offset().top-i.offset().top+i.scrollTop()},500)}catch(e){fit20.log(`!! Error in members.scrollTo: ${e}`)}}},computed:{newMemberRef:function(){return"new_member_"+Math.random().toString()},membersNotLoaded:function(){return isUndefined(fit20.store.state.members)},members:function(){return Object.values(fit20.store.state.members||{})},_listMembers:function(){return this.members?this.orderByLastName?this.members.filter((function(e){return e})).sort((function(e,t){return(e&&e.lastName||"").localeCompare(t&&t.lastName)||(e&&e.firstName||"").localeCompare(t&&t.firstName)})):this.members.filter((function(e){return e})).sort((function(e,t){return(e&&e.firstName||"").localeCompare(t&&t.firstName)||(e&&e.lastName||"").localeCompare(t&&t.lastName)})):[]},listVisibleMembers:function(){var e=this,t=e.memberFilter.toLowerCase();return this._listMembers.filter((function(i){return i&&i.active&&("ONHOLD"!=i.memberStatus||e.includeOnHoldMembers)&&(!t||i.fullName.toLowerCase().indexOf(t)>=0)}))},listActiveMembers:function(){return this._listMembers.filter((function(e){return e&&e.active}))},countMembers:function(){if(this.countSoloMembers=0,this.countDuoMembers=0,this.countOnHoldMembers=0,this.members)for(var e=0;e<this.members.length;e++)this.members[e]&&this.members[e].active&&"ONHOLD"!=this.members[e].memberStatus?this.members[e].duoPartner?this.countDuoMembers+=1:this.countSoloMembers+=1:this.members[e]&&this.members[e].active&&(this.countOnHoldMembers+=1);return this.countSoloMembers+this.countDuoMembers+this.countOnHoldMembers},sensorStatusClass:function(){return this.studio?isEmpty(this.studio.gatewayIPAddress)?"d-none":fit20.sensors.active?fit20.sensors.active<0?"btn-warning":"btn-primary":"btn-danger":"d-none"}},watch:{studio:function(e){e&&(!isEmpty(e.gatewayIPAddress)&&location.href.startsWith("https:")&&fit20.app.addAlert("warning",$t("M9550")),fit20.sensors.init(e).then((function(e){fit20.log("* Studio sensors changed. "+$t(JSON.stringify(e)))}),(function(e){fit20.log("!! Studio sensors changed. "+$t(JSON.stringify(e)))})))}}},fit20.components.memberinfo={template:'\n    <div class="member-info-panel pl-2">\n      <div class="d-flex flex-column">\n        <div class="member-name">\n          <h5 class="font-weight-bold word-break m-0 w-100">\n          \t<span class="name">{{ member.firstName }}</span>\n          </h5>\n        </div>\n        <div class="member-lastname">\n          <strong class="d-block text-secondary pb-2">{{ member.intercalation | appendIfNotEmpty(\' \') }}{{ member.lastName }}</strong>\n        </div>\n      </div>\n      <span class="alert alert-danger alert-small" v-if="member.daysToBirthday > -2 && member.daysToBirthday < 2">\n          <span v-if="member.daysToBirthday == 0"><i class="fas fa-birthday-cake"></i><strong>{{ $t(\'M0321\') }}</strong></span>\n          <span v-if="member.daysToBirthday == 1"><i class="fas fa-birthday-cake"></i><strong>{{ $t(\'M0322\') }}</strong></span>\n          <span v-if="member.daysToBirthday == -1"><i class="fas fa-birthday-cake"></i><strong>{{ $t(\'M0324\') }}</strong></span>\n      </span>\n      <span class="alert alert-warning alert-small" v-if="member.daysToBirthday > 1 && member.daysToBirthday < 14">\n      \t<strong>{{ $t(\'M0323\', {days: member.daysToBirthday}) }}</strong>\n      </span>\n      <span class="alert alert-warning alert-small" v-if="member.daysToBirthday < -1 && member.daysToBirthday > -14">\n      \t<strong>{{ $t(\'M0325\', {days: -member.daysToBirthday}) }}</strong>\n      </span>\n      <figure class="mt-2 mb-1 text-center" style="position:relative;" v-on:click="appModal(photoEditId)">\n        <i class="fas fa-camera no-photo-icon"></i>\n        <img :src="photoURI" class="memberPhoto">\n      </figure>\n      <span class="badge badge-light" v-if="member.age">{{ $t(\'M0302\', {age: member.age ? member.age : \'\'}) }}</span>\n      <div class="row no-gutters justify-content-between">\n        <div class="col-12">\n          <button type="button" class="btn btn-primary btn-icon"\n              v-on:click="appModal(memberEditId)"\n          >\n            <i :class="memberIconClasses(member)[0]"></i>\n          </button>\n          <button type="button" class="btn btn-primary btn-icon"\n              v-on:click="appModal(memberRemarksId)"\n          >\n            <i class="fas fa-comment-alt"></i>\n          </button>\n          <button type="button" class="btn btn-primary btn-icon"\n            v-on:click="openReport"\n          >\n            <i class="fas fa-chart-line"></i>\n          </button>\n        </div>\n        <div class="col-12 pt-2" v-if="activeSession">\n          <label class="small" :for="makeId(\'sessionRemark\')">{{ $t(\'M0816\') }}</label>\n          <textarea :id="makeId(\'sessionRemark\')" v-model="activeSession.remark"></textarea>\n        </div>\n        <div class="col-12 pt-2 d-flex" v-if="canBeAbsent">\n          <input type="checkbox" :id="makeId(\'absent\')" class="switch_1" :checked="activeSession.absent" v-model="activeSession.absent">\n          <label class="ml-2" :for="makeId(\'absent\')">{{ $t(\'M0410\') }}</label>\n        </div>\n        <div class="col-12" v-if="activeSession && activeSession.absent">\n          <label class="small" :for="makeId(\'absentReason\')">{{ $t(\'M0411\') }}</label>\n          <select name="absentReason" :id="makeId(\'absentReason\')" v-model="activeSession.absentReason" class="custom-select">\n            <option v-for="reason in absentReasons"\n                :value="reason[0]"\n                :selected="reason[0] == activeSession.absentReason ? \'selected\': \'\'"\n            >{{ $t(reason[0]) }}</option>\n          </select>\n        </div>\n        <div class="col-12 pt-2">\n          <span\n            v-on:click="appModal(memberEditId)"\n            class="alert alert-info alert-small"\n            v-for="msg in member.messages"\n            v-if="msg !== \'M0406\'">\n              {{ $t(msg) }}\n          </span>\n          <span\n            v-on:click="appModal(photoEditId)"\n            class="alert alert-info alert-small"\n            v-for="msg in member.messages"\n            v-if="msg === \'M0406\'">\n              {{ $t(msg) }}\n          </span>\n        </div>\n      </div>\n      <memberallremarks v-if="member" :member="member" :sessions="sessions" :id="memberRemarksId"></memberallremarks>\n      <memberedit v-if="member" :member="member" :id="memberEditId" :ref="memberEditId"></memberedit>\n      <membereditphoto v-if="member" :member="member" :id="photoEditId"></membereditphoto>\n    </div>\n  ',props:["member","sessions","activeSession"],components:{memberedit:fit20.components.memberedit,memberallremarks:fit20.components.memberallremarks,membereditphoto:fit20.components.membereditphoto},methods:{appModal:fit20.app.modal,makeId:function(e){return e+"_"+(this.member&&this.member.id)},memberIconClasses:function(e){return memberIconClasses(e)},openReport:function(){fit20.log(`Sending member progress report for ${this.member&&this.member.fullName}`);var e="member-report/old/?studioId="+fit20.store.state.currentStudio.id+"&memberId="+this.member.id+"&language="+fit20.i18n.getLanguage()+"&access_token="+fit20.app.getAccessToken();this.member.birthDate&&this.member.gender?!this.member.weight||this.member.weight<=0||!this.member.length||this.member.length<=0?confirm($t("M0717"))&&window.open(e,"_blank").focus():window.open(e,"_blank").focus():(this.member.birthDate||fit20.app.addAlert("danger","M0404"),this.member.gender||fit20.app.addAlert("danger","M9062"))}},computed:{canBeAbsent:function(){return!(!this.activeSession||!this.activeSession.absent)||this.activeSession&&this.activeSession.exercises&&(0==this.activeSession.exercises.length||this.activeSession.exercises.every((function(e){return e.duration<1})))},absentReasons:function(){return fit20.i18n.absentReasons()},memberEditId:function(){return"member-edit-"+(this.member&&this.member.id)},photoURI:function(){return isDefined(this.member)?fit20.app.addAccessTokenNoCache(this.member.photoURI):void 0},photoEditId:function(){return"member-edit-photo-"+(this.member&&this.member.id)},memberRemarksId:function(){return"member-remarks-"+(this.member&&this.member.id)}}},fit20.components.membermessages={template:'\n    <div class="member-messages-panel pl-2">\n      <div :id="accordionId(\'accordion\')" role="tablist" class="accordion">\n        <div class="card">\n          <h5 class="mb-0 card-header" role="tab" :id="accordionId(\'remark-header\')">\n            <a class="add no-photo-icon" v-on:click="remarkModal(\'Remark\')">\n              <i class="fas fa-pencil-alt"></i>\n            </a>\n            <a class="select collapsed" data-toggle="collapse" :href="accordionId(\'#remark-collapse\')">\n              {{ $t(\'M0305\') }}\n            </a>\n          </h5>\n          <div class="collapse card-body ordered" :id="accordionId(\'remark-collapse\')" role="tabpanel" :data-parent="accordionId(\'#accordion\')">\n            <div v-for="(remark, index) in memberRemarks" :style="{ order: -index }">\n              {{ remark }}\n            </div>\n          </div>\n        </div>\n        <div class="card">\n          <h5 class="mb-0 card-header" role="tab" :id="accordionId(\'aim-header\')">\n            <a class="add no-photo-icon" v-on:click="remarkModal(\'Aim\')">\n              <i class="fas fa-pencil-alt"></i>\n            </a>\n            <a class="select collapsed" data-toggle="collapse" :href="accordionId(\'#aim-collapse\')">\n              {{ $t(\'M0306\') }}\n            </a>\n          </h5>\n          <div class="collapse card-body ordered" :id="accordionId(\'aim-collapse\')" role="tabpanel" :data-parent="accordionId(\'#accordion\')">\n            <div v-for="(aim, index) in memberAims" :style="{ order: -index }">\n              {{ aim }}\n            </div>\n          </div>\n        </div>\n        <div class="card">\n          <h5 class="mb-0 card-header" role="tab" :id="accordionId(\'result-header\')">\n            <a class="add no-photo-icon" v-on:click="remarkModal(\'Result\')">\n              <i class="fas fa-pencil-alt"></i>\n            </a>\n            <a class="select collapsed" data-toggle="collapse" :href="accordionId(\'#result-collapse\')">\n              {{ $t(\'M0307\') }}\n            </a>\n          </h5>\n          <div class="collapse card-body ordered" :id="accordionId(\'result-collapse\')" role="tabpanel" :data-parent="accordionId(\'#accordion\')">\n             <div v-for="(result, index) in memberResults" :style="{ order: -index }">\n              {{ result }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <memberremarks\n          :memberId="memberId"\n          :messages="messages"\n          :messagesType="messagesType"\n          :messageTypeCode="messageTypeCode"\n          :id="accordionId(\'memberRemarks\')"\n      ></memberremarks>\n    </div>\n  ',props:["member","activeSession"],components:{memberremarks:fit20.components.memberremarks},data:function(){return{messagesType:void 0,messageTypeCode:void 0}},methods:{accordionId:function(e){return e+this.memberId},remarkModal:function(e){this.messagesType=e,"Remark"===this.messagesType?this.messageTypeCode="M0305":"Aim"===this.messagesType?this.messageTypeCode="M0306":"Result"===this.messagesType&&(this.messageTypeCode="M0307"),fit20.app.modal(this.accordionId("memberRemarks"))}},computed:{messages:function(){return this.messagesType?this.member[this.messagesType.toLowerCase()+"s"]:void 0},memberId:function(){return this.member&&this.member.id},memberRemarks:function(){return this.member?this.member.remarks:[]},memberAims:function(){return this.member?this.member.aims:[]},memberResults:function(){return this.member?this.member.results:[]}}},fit20.components.membermachinesettings={template:'\n    <div class="membermachine d-flex">\n      <div class="settings">\n        <div class="d-table-row" v-for="adjustableInitial in adjustableInitials">\n          <span class="d-table-cell">{{ $t(adjustableInitial) }}:</span>\n          <span class="d-table-cell">{{ adjustableValues && adjustableValues[adjustableInitial] || \'--\' }}</span>\n        </div>\n        <div class="d-table-row">\n          <span class="d-table-cell">\n            <span v-if="exerciseOKforMember" :class="sensorStatus"></span>\n            <span v-else=""class="text-danger"><i class="fas fa-ban"></i></span>\n          </span>\n          <span v-if="remark" class="ml-1 text-danger"><i class="fas fa-exclamation-triangle"></i></span>\n        </div>\n      </div>\n    </div>\n  ',props:["memberId","machine","remark","adjustableSettings","classes"],computed:{adjustableInitials:function(){return this.machine&&this.machine.adjustableInitials?this.machine.adjustableInitials.filter((function(e){return!$t(e).startsWith("-")})):[]},adjustableValues:function(){return this.adjustableSettings&&this.machine&&this.adjustableSettings[this.machine.id]},exerciseOKforMember:function(){return isUndefined(this.adjustableSettings[this.machine.id])||isEmpty(this.adjustableSettings[this.machine.id]["^0001"])},sensorStatus:function(){return isUndefined(this.machine)||isUndefined(this.machine.adjustableInitials)||this.machine.adjustableInitials.indexOf("^0081")<0?"d-none":isUndefined(this.adjustableSettings)||isUndefined(this.adjustableSettings[this.machine.id])?this.classes[2]?"icon icon-no-sensor "+this.classes[2]:"d-none":"M0030"===this.adjustableSettings[this.machine.id]["^0081"]?"icon icon-sensor "+this.classes[0]:"M0031"===this.adjustableSettings[this.machine.id]["^0081"]?"icon icon-no-sensor "+this.classes[1]:this.classes[2]?"icon icon-no-sensor "+this.classes[2]:"d-none"}}},fit20.components.membersessions={template:'\n    <div class="member-sessions-panel pl-2">\n      <div class="sessions">\n        <table class="session-table">\n          <tr>\n            \x3c!-- button to fetch more past sessions --\x3e\n            <td rowspan="999">\n              <button type="button" class="btn btn-primary btn-block btn-icon" v-if="hasEarlierSessions" v-on:click="getEarlierSessions()">\n                <i class="fa fa-backward pb-1"></i>\n              </button>\n            </td>\n            \x3c!-- past sessions --\x3e\n            <td v-for="session in sessions" class="head" @click="showSessionPopup(session)">\n              <div class="date-col bg-secondary text-white text-center flex-column">\n                <span>{{ session.date | dateFormat(\'short\') }}</span>\n                <span class="week">{{ $t(\'M0052\', { week: getSessionWeek(session.date) }) }}</span>\n                \x3c!-- <span class="hasAbsent" v-if="session.absent"><i class="fas fa-user-times"></i></span> --\x3e\n              </div>\n              <div class="nr-col text-white text-center">\n                <span class="nr" :class="{ \'text-danger\': session.absent || session.remark }">{{ session.number + member.nrPaperSessions }}</span>\n                <span class="ti" :class="{ \'text-danger\': session.absent || session.remark }">{{ session.trainerInitials }}</span>\n                \x3c!-- <span class="hasComment" v-if="session.remark"><i class="fas fa-exclamation-circle"></i></span> --\x3e\n              </div>\n            </td>\n          </tr>\n          <tr v-for="machine in machines">\n            \x3c!-- past sessions --\x3e\n            <td v-for="session in sessions" class="data">\n              <div class="exercise-col">\n                <div v-for="exercise in exerciseFor(session, machine.id)"\n                     class="row no-gutters"\n                     :class="{ remark: exercise.remark }"\n                     @click="showExerciseDetails(machine, exercise, session.date)"\n                >\n                  <div class="col-9 exercise-data-l">\n                    <span class="weight">{{ exercise.weight }}</span><br>\n                    <span class="time">{{ exercise.duration | showTime }}</span>\n                  </div>\n                  <div class="col-3 exercise-data-r">\n                    <span class="order">{{ exercise.order }}</span>\n                    <span class="change">{{ exercise.weightChange | weightChange }}</span>\n                  </div>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class="machines">\n        <div v-if="activeSession">\n          <div class="absent-active" v-if="activeSession.absent"><h3>{{ $t(\'M0410\') }}</h3></div>\n        </div>\n        <table class="session-table">\n          <tr>\n            \x3c!-- active session --\x3e\n            <td v-if="activeSession" class="head member-active-session" @click="showSessionPopup(activeSession)">\n              <div class="date-col bg-secondary text-white text-center flex-column">\n                <span>{{ activeSession.date | dateFormat(\'short\') }}</span>\n                <span class="week">{{ $t(\'M0052\', { week: getSessionWeek(activeSession.date) }) }}</span>\n              </div>\n              <div class="nr-col bg-primary text-white text-center">\n                <div class="nr">{{ activeSession.number + member.nrPaperSessions }}</div>\n                <span class="ti">{{ activeSession.trainerInitials }}</span>\n              </div>\n            </td>\n            \x3c!-- last column machine header = deselect machine (eraser) --\x3e\n            <td class="head" style="border: 1px solid transparent;">\n              \x3c!-- deselect machine --\x3e\n              <div v-if="activeSession && selectedMachineId && !isExerciseStarted" class="text-light h-100 text-center pt-1" @click="selectMachine(null)">\n                <i class="h2 fas fa-eraser"></i>\n              </div>\n            </td>\n          </tr>\n          <tr v-for="machine in machines">\n            \x3c!-- active session machine --\x3e\n            <td v-if="activeSession" class="data member-active-session">\n              <div class="exercise-col">\n                <div v-for="exercise in exerciseFor(activeSession, machine.id)"\n                     class="row no-gutters"\n                     :class="{ remark: exercise.remark }"\n                     @click="showExerciseDetails(machine, exercise, activeSession.date)"\n                >\n                  <div class="col-9 exercise-data-l">\n                    <span class="weight">{{ exercise.weight || 0 }}</span><br>\n                    <span class="time">{{ (exercise.duration || 0) | showTime }}</span>\n                  </div>\n                  <div class="col-3 exercise-data-r">\n                    <span class="order">{{ exercise.order || \'\' }}</span>\n                    <span class="change">{{ (exercise.weightChange || \'\') | weightChange }}</span>\n                  </div>\n                </div>\n              </div>\n            </td>\n            \x3c!-- machine --\x3e\n            <td :class="machineClass(machine)" class="studio-machine"\n                @click="selectMachine(machine.id)"\n            >\n              <div class="machine-col row no-gutters">\n                <div class="col-9"><span class="machine">{{ machine.name || \' \' }}</span></div>\n                <membermachinesettings class="settings col-3"\n                  :memberId="memberId" :machine="machine" :remark="machineRemarks[machine.id]"\n                  :adjustableSettings="adjustableSettings" :classes="[\'\', \'\', \'d-none\']"\n                  :key="selectedMachineId"\n                ></membermachinesettings>\n              </div>\n            </td>\n          </tr>\n        </table>\n      </div>\n      <memberexercisedetails\n        :machine="exerciseMachine"\n        :exercise="exerciseDetails"\n        :date="exerciseDate"\n        :id="exerciseId(\'exerciseDetails\')"\n      ></memberexercisedetails>\n      <membersessionpopup\n        :session="sessionEdit"\n        :canedit="!this.activeSession"\n        :id="sessionId(\'sessionPopup\')"\n        @editSession="editSession"\n      >\n      </membersessionpopup>\n    </div>\x3c!-- .member-sessions-panel --\x3e\n  ',components:{membermachinesettings:fit20.components.membermachinesettings,memberexercisedetails:fit20.components.memberexercisedetails,membersessionpopup:fit20.components.membersessionpopup},props:["member","sessions","activeSession","selectedMachine","duoPartnerSelectedMachine","isExerciseStarted","adjustableSettings","machineRemarks"],data:function(){return{exerciseMachine:void 0,exerciseDetails:void 0,exerciseDate:void 0,sessionEdit:{absent:!1,date:new Date,remark:void 0}}},computed:{memberId:function(){return this.member&&this.member.id},machines:function(){return fit20.store.state.studioMachines||[]},selectedMachineId:function(){return this.selectedMachine?this.selectedMachine.id:void 0},duoPartnerSelectedMachineId:function(){return this.duoPartnerSelectedMachine?this.duoPartnerSelectedMachine.id:void 0},hasEarlierSessions:function(){return!!(this.sessions&&this.sessions.length>0)&&this.sessions[0].number>1}},methods:{exerciseId:function(e){return e+(this.member&&this.member.id)},showExerciseDetails:function(e,t,i){e&&t&&i&&(this.exerciseMachine=e,this.exerciseDetails=t,this.exerciseDate=i,fit20.app.modal(this.exerciseId("exerciseDetails")))},sessionId:function(e){return e+"_"+(this.member&&this.member.id)},showSessionPopup:function(e){e&&(this.sessionEdit=e,fit20.app.modal(this.sessionId("sessionPopup")))},exerciseFor:function(e,t){var i=isDefined(e)&&!isEmpty(e.exercises)?e.exercises.find((function(e){return e.machineId==t})):void 0;return isDefined(i)?[i]:[]},hasBeenDone:function(e,t){var i=isDefined(e)&&!isEmpty(e.exercises)?e.exercises.find((function(e){return e.machineId==t})):void 0;return isDefined(i)&&isDefined(i.order)&&i.order>0},getEarlierSessions:function(){fit20.get(["memberSessions",this.member.id],!0)},editSession:function(e){this.activeSession||(fit20.log("* membersessions.editSession"),fit20.store.state.activeMemberSessions&&fit20.store.state.activeMemberSessions[e.parentMemberId]||fit20.store.commit("setActiveMemberSession",e))},selectMachine:function(e){this.$emit("selectMachine",e)},exerciseOKforMember:function(e){return isUndefined(e)||isUndefined(this.adjustableSettings[e.id])||isEmpty(this.adjustableSettings[e.id]["^0001"])},getSessionWeek:function(e){return getWeek(e)},machineClass:function(e){var t=this.hasBeenDone(this.activeSession,e.id);return e.id==this.selectedMachineId?"bg-emphasis":e.id==this.duoPartnerSelectedMachineId?"bg-light text-gray":t?t?"bg-primary":this.exerciseOKforMember(e)?"":"donot":"bg-light"}},mounted:function(){$(".sessions, .machines",this.$el).syncScroll({vertical:!0})}},fit20.components.sessioncontrols={template:'\n    <div v-show="isShown" class="session-controls pr-2 pl-1">\n      <div class="session-controls-ui">\n        <div class="header" @click="editMMSettings" :class="{\'bg-emphasis\' : !exerciseOKforMember}">\n          <h5 class="machine-name text-white m-0">\n            <div class="mb-2">{{ machine ? machine.name : \'\' }}</div>\n          </h5>\n          <div class="machine-settings text-white">\n            <membermachinesettings :memberId="memberId" :machine="machine"\n                :adjustableSettings="adjustableSettings"\n                :classes="[\'text-white\', \'text-white\', \'text-danger\']">\n            </membermachinesettings>\n          </div>\n          <div class="membermachine-remark text-white" v-if="settings.remark">\n            {{ settings.remark || " " }}\n          </div>\n        </div>\n        <div class="control text-white">\n            <div class="name">\n              <i class="fas fa-balance-scale"></i>\x3c!-- M0811 --\x3e\n            </div>\n            <div class="select">\n              <select v-model="exercise.weight" style="min-width:70px;">\n                <option v-for="weight in (machine ? machine.weightValues : [])">{{ weight }}</option>\n              </select>\n            </div>\n            <div class="w-20 text-center weight-fz">{{ machine ? machine.weightUnit : \'\' }}</div>\n            <div class="weight-up-down pl-2" v-show="exercise">\n              <button @click="setWeight(+1)" class="btn btn-primary py-0 mb-1"><i class="fas fa-sort-up"></i></button>\n              <button @click="setWeight(-1)" class="btn btn-primary py-0"><i class="fas fa-sort-down"></i></button>\n            </div>\n        </div>\n        <div class="control text-white">\n          <div class="name">\n            <i class="fas fa-stopwatch"></i>\x3c!-- M0812 --\x3e\n          </div>\n          <div class="select">\n            <select class="min" v-model="setMinutes" @change="setDuration">\n              <option v-for="min in minutes" :value="min" :selected="min == setMinutes ? \'selected\': \'\'">{{ min }}</option>\n            </select>\n            <span>:</span>\n            <select class="sec" v-model="setSeconds" @change="setDuration">\n              <option v-for="sec in seconds" :value="sec" :selected="sec == setSeconds ? \'selected\': \'\'">{{ sec }}</option>\n            </select>\n          </div>\n          <div class="w-20">\n            <button type="button" class="btn" :class="stopButtonClass" @click="stopExercise">\n              <i class="fa fa-stop" aria-hidden="true"></i>\n            </button>\n          </div>\n        </div>\n        <div class="control text-white">\n          <label v-for="val in [\'NONE\', \'MORE\', \'SAME\', \'LESS\']"\n                 :for="buttonId(val)"\n                 class="btn m-1"\n                 :class="{ \'btn-primary\': val == exercise.weightChange, \'btn-secondary\': val != exercise.weightChange }"\n          >\n            <input :id="buttonId(val)" :name="buttonId(\'weightChange\')" type="radio" v-model="exercise.weightChange" :value="val">\n            {{ val | weightChange }}\n          </label>\n        </div>\n        <div class="control text-white bottom flex-column">\n          <div class="name w-100 pb-1">\n            {{ $t(\'M0326\') }}\n          </div>\n          <div class="select w-100">\n            <textarea v-model="exercise.remark"></textarea>\n          </div>\n        </div>\n        <editmembermachinesettings :member="member" :machine="machine"\n          :id="memberMachineSettingsEditId" :ref="memberMachineSettingsEditId" @settingsChanged="settingsChanged">\n        </editmembermachinesettings>\n      </div>\n    </div>\n  ',components:{membermachinesettings:fit20.components.membermachinesettings,editmembermachinesettings:fit20.components.editmembermachinesettings},props:["member","session","selectedExercise","isExerciseStarted","isExerciseActive","adjustableSettings"],data:function(){return{exercise:{},setMinutes:void 0,setSeconds:void 0}},computed:{minutes:function(){return[0,1,2,3,4]},seconds:function(){return Array.apply(0,Array(60)).map((function(e,t){return"0".substring(t>=10)+t}))},memberId:function(){return this.member&&this.member.id},machine:function(){return this.exercise&&fit20.store.state.machines[this.exercise.machineId]||{}},machineId:function(){return this.machine&&this.machine.id},isShown:function(){return isDefined(this.exercise)},memberMachineSettingsEditId:function(){return"member-machine-settings-edit-"+this.memberId},settings:function(){return(fit20.store.state.memberMachineSettings&&fit20.store.state.memberMachineSettings[this.memberId]?fit20.store.state.memberMachineSettings[this.memberId][this.machineId]:void 0)||{values:[],remark:""}},exerciseOKforMember:function(){return isUndefined(this.adjustableSettings[this.machineId])||isEmpty(this.adjustableSettings[this.machineId]["^0001"])},stopButtonClass:function(){return this.selectedExercise?this.isExerciseStarted?"btn-primary":this.isExerciseActive?"btn-emphasis flashopq":"btn-emphasis":"btn-secondary"}},methods:{editMMSettings:function(){this.machine&&fit20.app.modal(this.memberMachineSettingsEditId)},buttonId:function(e){return this.member?this.memberId+e:Date.now()+e},settingsChanged:function(){this.$emit("settingsChanged")},stopExercise:function(){if(this.selectedExercise)if(this.isExerciseStarted){var e=this.$parent.getStopwatchDuration();fit20.log(`* sessioncontrols stopExercise for ${this.member&&this.member.fullName} at ${e} sec.`),isNaN(e)?e=this.exercise.duration:this.$set(this.exercise,"duration",e>=0?e:0),isUndefined(this.exercise.weight)&&this.$set(this.exercise,"weight",0),this.setOrder(),this.setMinutesSeconds(e),this.$emit("stopExercise")}else this.$emit("finishExercise")},setDuration:function(){var e=60*parseInt(this.setMinutes)+parseInt(this.setSeconds);this.$set(this.exercise,"duration",e>=0?e:0),this.setOrder()},setMinutesSeconds:function(e){this.setMinutes=""+Math.floor(e/60);var t=Math.abs(e%60);this.setSeconds="0".substring(t>=10)+t},setOrder:function(){!this.exercise.order&&this.exercise.duration>0&&(this.exercise.order=this.session.exercises.filter((function(e){return e.order>0})).length+1)},setWeight:function(e){if(this.machine&&this.machine.weightValues){var t=this.machine.weightValues.indexOf(String(this.exercise.weight))+e;t>=0&&t<this.machine.weightValues.length&&(this.exercise.weight=this.machine.weightValues[t])}}},watch:{selectedExercise:function(e){isDefined(e)?(this.exercise=e,this.setMinutesSeconds(this.exercise.duration)):isUndefined(this.exercise)&&(this.exercise={},this.setMinutesSeconds(0))}}},fit20.components.member_panel={template:'\n    <div class="member-panel" :id="panelId">\n      <div class="memberinfocolumn">\n        <sensor\n          v-if="activeSession"\n          :machine="selectedMachine"\n          :member="member"\n          :exercise="selectedExercise"\n          :sessions="sessions"\n          :adjustableSettings="adjustableSettings"\n          :visible_sensor="visible_sensor"\n          :panelId="panelId"\n          :isExerciseStarted="isExerciseStarted"\n          @visibility_toggle="sensorVisibilityToggle"\n          @sensor_results="sensorResults"\n          @finish_exercise="finishExercise"\n        ></sensor>\n        <div class="d-flex flex-row">\n          <memberinfo class="w-50"\n            :member="member"\n            :sessions="sessions || []"\n            :activeSession="activeSession"\n          ></memberinfo>\n          <membermessages class="w-50"\n            :member="member"\n            :activeSession="activeSession"\n          ></membermessages>\n        </div>\n      </div>\n      <membersessions\n        :member="member"\n        :sessions="sessions || []"\n        :activeSession="activeSession"\n        :selectedMachine="selectedMachine"\n        :duoPartnerSelectedMachine="duoPartnerSelectedMachine"\n        :isExerciseStarted="isExerciseStarted"\n        :adjustableSettings="adjustableSettings"\n        :machineRemarks="machineRemarks"\n        @selectMachine="selectMachine"\n      ></membersessions>\n      <sessioncontrols\n        v-if="activeSession"\n        :member="member"\n        :session="activeSession"\n        :selectedExercise="selectedExercise"\n        :isExerciseStarted="isExerciseStarted"\n        :isExerciseActive="isExerciseActive"\n        :adjustableSettings="adjustableSettings"\n        @stopExercise="stopExercise"\n        @finishExercise="finishExercise"\n        @settingsChanged="settingsChanged"\n      ></sessioncontrols>\n      <editmembermachinesettings\n        :member="member" :machine="focusedMachine"\n        :id="memberMachineSettingsViewId" :ref="memberMachineSettingsViewId" @settingsChanged="settingsChanged">\n      </editmembermachinesettings>\n    </div>\n  ',components:{memberinfo:fit20.components.memberinfo,membermessages:fit20.components.membermessages,membersessions:fit20.components.membersessions,editmembermachinesettings:fit20.components.editmembermachinesettings,sessioncontrols:fit20.components.sessioncontrols,sensor:fit20.components.sensor},props:["member","sessions","activeSession","duoPanel"],data:function(){return{focusedMachine:void 0,selectedMachine:void 0,selectedExercise:void 0,isExerciseStarted:!1,isExerciseActive:!1,visible_sensor:!1}},methods:{sensorVisibilityToggle:function(e){isUndefined(e)&&(e=!this.visible_sensor),this.visible_sensor=e,fit20.log(`* member_panel: Sensor visibility toggled to ${e} for member ${this.memberDisplay})`)},settingsChanged:function(){},selectMachine:function(e){var t=this;if(!isDefined(e))return fit20.log(`* member_panel: De-selecting machine for ${t.memberDisplay}`),void t.finishExercise();var i=t.activeSession,n=fit20.store.state.machines[e]||{};isDefined(i)&&!this.isExerciseStarted&&!(isDefined(this.selectedExercise)&&this.selectedExercise.machineId==e)&&!(isDefined(this.duoPartnerSelectedMachine)&&this.duoPartnerSelectedMachine.id==e)?(fit20.log(`* member_panel: Selecting machine ${n.longName} (${n.id}) for ${t.memberDisplay}`),(isDefined(t.selectedExercise)?t.stopExercise({terminate:!0,cause:`selectMachine change to ${e} for ${this.memberDisplay}`}):Promise.resolve(`member_panel selectMachine: no previous machine selected for ${this.memberDisplay}`)).then((function(e){return t.finishExercise()})).then((function(s){t.selectedMachine=n,isUndefined(i.exercises)&&(i.exercises=[]);var r=i.exercises.findIndex((function(t){return t.machineId==e}));r<0?(t.selectedExercise=t._makeNewExercise(t.selectedMachine,i),i.exercises.push(t.selectedExercise)):(t.selectedExercise=i.exercises[r],Vue.set(i.exercises,r,t.selectedExercise));var a=(i.exercises||[]).map((function(e){return e&&e.machineId})).join(", ");fit20.log(`* member_panel.selectMachine Exercise for ${t.memberDisplay} is ${t.selectedExercise?t.selectedMachineDisplay:"NOT selected"}, activeSessionExerciseMachineIds are [${a}]`)})).catch((function(e){fit20.log(`!! member_panel: Problem in member.selectMachine: ${e}`)}))):(this.focusedMachine=n,this.$nextTick((function(){fit20.app.modal(this.memberMachineSettingsViewId)})))},_makeNewExercise:function(e,t){var i=-1;if(isDefined(this.sessions))for(var n=this.sessions.length-1;n>=0;--n)if(this.sessions[n].exercises){var s=this.sessions[n].exercises.find((function(t){return t.machineId==e.id}));if(isDefined(s)&&isDefined(s.weight)){i=s.weight;break}}return i<0&&(i=isDefined(e.defaultWeight)?e.defaultWeight:isEmpty(e.weightValues)?0:e.weightValues[Math.floor(e.weightValues.length/2)]),{machineId:e.id,order:"",weight:i,duration:0,weightChange:"NONE",remark:""}},getStopwatchDuration:function(){return this.$parent.getStopwatchDuration()},startExercise:function(){var e=this;if(isUndefined(e.selectedExercise))return Promise.reject(`member_panel startExercise: no exercise selected for member ${e.memberDisplay}`);if(e.selectedExercise.machineId!=e.selectedMachine.id)throw"Application error in fit20.components.member_panel.startExercise: "+e.selectedExercise.machineId+" != "+e.selectedMachine.id;return fit20.log(`* member_panel: startExercise for member ${e.memberDisplay}, machine ${e.selectedMachineDisplay}`),e.isExerciseStarted=!0,e.isExerciseActive=!0,Promise.resolve("startExercise: exercise started")},stopExercise:function(e){e=e||{};var t=this,i={member:`${t.memberDisplay}`};fit20.log(`* member_panel: stopExercise for ${stringify(i)} by `+(fit20.sensors.active?e.terminate?"terrminate-with-sensor":"stop-with-sensor":"stop-without-sensor")+(e.cause?` (${e.cause})`:""));return function(t){if(isUndefined(t.selectedExercise)){var n="* member_panel: stopExercise: no exercise selected for "+stringify(i);return fit20.log(n),Promise.resolve()}if(!t.isExerciseStarted&&!e.terminate){n=" member_panel: stopExercise: exercise is not started for "+stringify(i);return fit20.log(n),Promise.resolve()}return t.reactiveExerciseChange(),t.isExerciseStarted=!1,i.machine=t.selectedMachineDisplay,fit20.log(`* member_panel: stopExercise is stopped for ${stringify(i)}, emit stopExercise event`),t.$emit("stopExercise",t.member,t.selectedExercise),e.terminate&&t.finishExercise(),Promise.resolve("stopExercise: exercise successfully stopped")}(t).then((function(){!function(t){if(t.visible_sensor){fit20.log(`* member_panel: stopExercise stopping sensor for ${stringify(i)}`);var n=t.member&&t.member.id;return e.terminate?fit20.sensors.finishExercise(fit20.store.state.currentStudio.id,n):fit20.sensors.stopExercise(fit20.store.state.currentStudio.id,n)}fit20.log(`* member_panel: stopExercise finishing without sensor for ${stringify(i)}`),t.finishExercise()}(t)})).then((function(){return fit20.log(`* member_panel: stopExercise completed for ${stringify(i)}`),Promise.resolve()})).catch((function(e){fit20.log(`! member_panel: stopExercise: ${stringify(i)} sensor stop or finish was rejected `+JSON.stringify(e))}))},sensorResults:function(e){var t=this.selectedExercise;if(isUndefined(t))return Promise.resolve("sensorResults: no exercise selected");Vue.set(t,"qs_average",e.average),Vue.set(t,"qs_tempo",e.tempo),Vue.set(t,"qs_rhythm",e.rhythm),Vue.set(t,"qs_range",e.range)},finishExercise:function(){return fit20.log(`* member_panel: unSelect / finishExercise for machine ${this.selectedMachineDisplay} for member ${this.memberDisplay}`),this.selectedMachine=void 0,this.selectedExercise=void 0,this.isExerciseStarted=!1,this.isExerciseActive=!1,this.visible_sensor=!1,Vue.nextTick()},reactiveExerciseChange:function(){try{var e=this.selectedExercise&&this.selectedExercise.machineId;if(isDefined(this.activeSession)&&isDefined(e)){if(e!=this.selectedMachine.id)throw`Application error in fit20.components.member_panel.reactiveExerciseChange  for machine ${this.selectedMachineDisplay} for member ${this.memberDisplay}" ${e} != ${this.selectedMachine.id}`;fit20.log(`* Trigger reactive exercise change  for machine ${this.selectedMachineDisplay} for member ${this.memberDisplay}`);var t=this.activeSession.exercises||[],i=t.findIndex((function(t){return t.machineId==e}),this);if(i<0){var n=t.map((function(e){return e&&e.machineId})).join(", "),s=`!! member_panel: Application error in fit20.components.member_panel.reactiveExerciseChange for machine ${this.selectedMachineDisplay} for member ${this.memberDisplay}: selectedMachineId [${e}] cannot be found in activeSessionExerciseMachineIds [${n}]`;fit20.log(s),fit20.logServer(s,"member-panel.js fit20.components.member_panel/reactiveExerciseChange",2)}else{Vue.set(this.activeSession.exercises,i,this.activeSession.exercises[i]);n=(this.activeSession.exercises||[]).map((function(e){return e&&e.machineId})).join(", ");fit20.log(`* member_panel: reactiveExerciseChange, activeSessionExerciseMachineIds are [${n}]`)}}}catch(e){fit20.logServer(`Really bad coding caused ${JSON.stringify(e)}`,"member-panel.js fit20.components.member_panel/reactiveExerciseChange",2)}}},computed:{panelId:function(){return"memberPanel-"+(this.member?this.member.id:Math.random().toString())},memberMachineSettingsViewId:function(){return"member-machine-settings-view-"+this.panelId},memberDisplay:function(){return this.member?`${this.member.fullName} (${this.member.id})`:"<no member>"},selectedMachineDisplay:function(){return this.selectedMachine?`${this.selectedMachine.longName} (${this.selectedMachine.id})`:"<no selected machine>"},adjustableSettings:function(){var e={};if(this.member){isUndefined(fit20.store.state.machines)&&fit20.addAlert("error","M9111");var t=fit20.store.state.memberMachineSettings[this.member.id];if(isDefined(t))for(var i=Object.keys(t).map((function(e){return fit20.store.state.machines[e]})),n=0;n<i.length;++n){var s=i[n];e[s.id]={};for(var r=0;r<s.adjustableInitials.length;++r)if(isUndefined(t[s.id])){var a=`!! member_panel: ${(new Date).toString()}: settings[machine.id] is undefined for machine ${s.longName} (${s.id}), member ${this.memberDisplay}`;fit20.log(a),fit20.logServer(a,"member-panel.js fit20.components.member_panel/adjustableSettings",2)}else isDefined(t[s.id].values)&&(e[s.id][s.adjustableInitials[r]]=t[s.id].values[r])}}return e},machineRemarks:function(){var e={};if(this.member){var t=fit20.store.state.memberMachineSettings[this.member.id];isDefined(t)&&Object.entries(t).forEach((function(t){e[t[0]]=t[1].remark}))}return e},duoPartnerSelectedMachine:function(){return isDefined(this.duoPanel)&&this.duoPanel.selectedMachine}}},fit20.components.member={template:'\n    <article>\n      <section class="d-flex flex-column">\n        <member_panel v-if="hasMember"\n          :ref="primaryMemberPanelRef"\n          :key="primaryMemberPanelRef+\'_key\'"\n          :member="primaryMember"\n          :sessions="primaryMemberSessions"\n          :activeSession="primaryMemberActiveSession"\n          :duoPanel="duopartnerPanel"\n          :class="{ \'duo-partner-top\': hasDuoPartner }"\n          @stopExercise="stopExercise"\n        >\n        </member_panel>\n        <member_panel v-if="hasDuoPartner"\n          :ref="duopartnerPanelRef"\n          :key="duopartnerPanelRef+\'_key\'"\n          :member="duoPartner"\n          :sessions="duoPartnerSessions"\n          :activeSession="duoPartnerActiveSession"\n          :duoPanel="primaryMemberPanel"\n          :class="{ \'duo-partner-bottom\': hasDuoPartner }"\n          @stopExercise="stopExercise"\n        >\n        </member_panel>\n      </section>\n      <trainercontrols :showtrainer="false" :key="primaryMemberPanelRef+\'_controls_key\'">\n        <button v-if="hasActiveSession && runningExercises == 0" type="button" class="btn btn-primary btn-icon px-5" @click="saveSession">\n          <i class="d-block fas fa-download pb-1"></i>\n          {{ $t(\'M0005\') }}\n        </button>\n        <button v-if="hasActiveSession && runningExercises == 0" type="button" class="btn btn-primary btn-icon" @click="cancelSession">\n          <i class="d-block fas fa-trash pb-1"></i>\n          {{ $t(\'M0025\') }}\n        </button>\n        <div class="d-inline-flex">\n          <div class="stopwatch border border-primary align-items-center"\n            v-if="hasActiveSession"\n            v-show="hasSelectedExercise"\n          >\n            <span class="stopwatch-display p-1" :class="{\'text-warning\': stopwatch.countDown}" style="width: 5rem">\n              {{ stopwatch.display }}\n            </span>\n            <button type="button" class="btn btn-primary" @click="startExercise" v-if="startStopwatchAllowed">\n              <i class="fa fa-play" aria-hidden="true"></i>\n            </button>\n          </div>\x3c!-- .stopwatch --\x3e\n        </div>\n        <button v-if="canStartSession && ! hasActiveSession" type="button" class="btn btn-primary btn-icon" @click="startNewSession">\n          <i class="d-block far fa-file-plus pb-1"></i>\n          {{ $t(\'M0301\') }}\n        </button>\n      </trainercontrols>\n    </article>\n  ',props:["memberId"],components:{member_panel:fit20.components.member_panel,trainercontrols:fit20.components.trainercontrols},data:function(){return{primaryMemberPanel:void 0,duopartnerPanel:void 0,sessionTimer:void 0,stopwatch:{startTime:void 0,totalTimeMs:0,timer:void 0,display:"0:00",countDown:!1},canStartSession:!1,tabClosing:!1}},methods:{startNewSession:function(){fit20.log(`* Member startNewSession by ${this.trainer}`),this.hasMember&&(this.primaryMemberLastSession&&sameDate(new Date,this.primaryMemberLastSession.date)?fit20.store.commit("setActiveMemberSession",this.primaryMemberLastSession):fit20.store.commit("setActiveMemberSession",this._newSession(this.primaryMember.id)),this.setSessionTimer()),this.hasDuoPartner&&(this.duoPartnerLastSession&&sameDate(new Date,this.duoPartnerLastSession.date)?fit20.store.commit("setActiveMemberSession",this.duoPartnerLastSession):fit20.store.commit("setActiveMemberSession",this._newSession(this.duoPartner.id)))},_newSession:function(e){var t=fit20.store.state.memberSessions[e]||[],i={absent:!1,number:isEmpty(t)?1:t[t.length-1].number+1,date:new Date,exercises:[],parentMemberId:e};return fit20.log("* New session for member "+e),i},setSessionTimer:function(){var e=this;this.clearSessionTimer(),this.sessionTimer=setTimeout((function(){fit20.app.addAlert("warning",$t("M9036",{name:e.primaryMember.fullName}))}),12e5)},clearSessionTimer:function(){isDefined(this.sessionTimer)&&(clearTimeout(this.sessionTimer),this.sessionTimer=void 0)},saveSession:function(){this.clearSessionTimer(),fit20.log(`* Member saveSession by ${this.trainer}`);var e,t=this,i=[];if(t.hasMember&&isDefined(t.primaryMemberActiveSession))if(isUndefined(e=t.primaryMemberPanel)){var n=t.reportMemberPanelProblem("saveSession (primary member)");fit20.log(n),fit20.logServer(n,"member.js fit20.components.member/saveSession primaryMember",2),fit20.app.addAlert("error",`M9590 M9698 \n Session of ${t.primaryMember.fullName} not found`)}else t.primaryMemberActiveSession.absent&&!t.primaryMemberActiveSession.absentReason?(fit20.log("! saveSession failed: No selected absent reason for memberId="+this.memberId),fit20.app.addAlert("error",`M9590 M9515 (${t.primaryMember.fullName})`),i.push(Promise.reject(`M9590 M9515 (${t.primaryMember.fullName})`))):i.push(e.stopExercise({terminate:!0,cause:"saving session for memberId="+this.memberId}).then((function(){return fit20.put("memberSession",t.primaryMemberActiveSession)})).catch((function(e){var t="!! Error saving session, "+JSON.stringify(e);return fit20.log(t),fit20.logServer(t,"member.js fit20.components.member/saveSession",2),Promise.reject(e)})));else fit20.log(`! No member or active session in saveSession by ${this.trainer}`);if(t.hasDuoPartner&&isDefined(t.duoPartnerActiveSession))if(isUndefined(e=t.duopartnerPanel)){n=t.reportMemberPanelProblem("saveSession (duo partner)");fit20.log(n),fit20.logServer(n,"member.js fit20.components.member/saveSession duoPartner",2),fit20.app.addAlert("error",`M9590 M9698 \n session of ${t.duoPartner.fullName} not found`)}else t.duoPartnerActiveSession.absent&&!t.duoPartnerActiveSession.absentReason?(fit20.log("! saveSession failed: No selected absent reason for duo partner, memberId="+this.primaryMember.duoPartner),fit20.app.addAlert("error",`M9590 M9515 (${t.duoPartner.fullName})`),i.push(Promise.reject(`M9590 M9515 (${t.duoPartner.fullName})`))):i.push(e.stopExercise({terminate:!0,cause:"saving session for memberId="+this.primaryMember.duoPartner}).then((function(){return fit20.put("memberSession",t.duoPartnerActiveSession)})).catch((function(e){var t="!! Error saving session, "+JSON.stringify(e);return fit20.log(t),fit20.logServer(t,"member.js fit20.components.member/saveSession",2),Promise.reject(e)})));Promise.all(i).then((function(){fit20.log("* saveSession: Clear active session(s)"),t.hasMember&&fit20.store.commit("setActiveMemberSession",t.primaryMember.id),t.hasDuoPartner&&fit20.store.commit("setActiveMemberSession",t.duoPartner.id)})).catch((function(e){fit20.log(`!! saveSession failed: ${e}`),fit20.logServer(`Saving session failed: ${e}.`,"member.js fit20.components.member/saveSession",2)}))},cancelSession:function(e){var t=this;e&&e.tabClosing&&(t.tabClosing=!0);var i=e&&e.force;if(!i&&isDefined(window.confirm)&&window.confirm($t("M9031"))&&(i=!0),!i)return Promise.resolve();this.clearSessionTimer();var n=`${t.primaryMember&&t.primaryMember.fullName} (${t.primaryMember&&t.primaryMember.id})`;return fit20.log(`* cancelSession ${t.tabClosing?"closing tab":""} for ${n}`),(t.hasActiveSession&&t.hasMember?t._cancelSession(t.primaryMemberPanel,t.primaryMember):Promise.resolve()).then((function(){return t.hasActiveSession&&t.hasDuoPartner?t._cancelSession(t.duopartnerPanel,t.duoPartner):Promise.resolve()})).then((function(){return fit20.log(`* cancelSession completed for ${n}`),Promise.resolve()})).catch((function(e){var t=`!! cancelSession failed for ${n}`;fit20.log(t),Promise.reject(t)}))},_cancelSession:function(e,t){var i=`${this.trainer} canceling session of ${t.fullName} (${t.id})`;if(fit20.log(`! ${i}`),isUndefined(e)){var n=this.reportMemberPanelProblem("_cancelSession");return fit20.log(n),fit20.logServer(n,"member.js fit20.components.member/cancelSession",2),Promise.reject(n)}return e.stopExercise({terminate:!0,cause:"canceling session for member = "+t.fullName}).then((function(){return fit20.log(`* cancelSession refreshing sessions for ${t.fullName}`),fit20.store.commit("clearMemberSessions",t.id),fit20.get(["memberSessions",t.id],!0)})).then((function(){fit20.log(`* cancelSession un-setting active session for ${t.fullName}`),fit20.store.commit("setActiveMemberSession",t.id)})).catch((function(e){var i=`cancelSession failed to memberPanel.stopExercise for ${t.fullName}: ${e}`;fit20.log(`!! ${i}`),fit20.logServer(i,"member.js fit20.components.member/cancelSession",2)}))},startExercise:function(){var e=this;e.clearSessionTimer(),fit20.log("* Member startExercise"),(fit20.sensors.active?Promise.all([fit20.sensors.startExercise(e.currentStudio.id,e.primaryMember.id),e.hasDuoPartner?fit20.sensors.startExercise(e.currentStudio.id,e.duoPartner.id):Promise.resolve()]):Promise.resolve()).catch((function(e){fit20.log(`!! Member startExercise error when starting sensors: ${e}`)})).then((function(){e.startStopwatch(),e.primaryMemberPanel&&e.primaryMemberPanel.selectedExercise&&e.primaryMemberPanel.startExercise(),e.duopartnerPanel&&e.duopartnerPanel.selectedExercise&&e.duopartnerPanel.startExercise()}))},stopExercise:function(e,t){fit20.log(`* Member stopExercise for ${e.fullName}, ${this.runningExercises} exercises still running`),0==this.runningExercises&&this.stopwatch.timer&&(fit20.log(`⏱ stopwatch ${this.stopwatch.timer} stopping at ${this.stopwatch.startTime}+${this.stopwatch.totalTimeMs}`),clearInterval(this.stopwatch.timer),this.stopwatch.startTime=void 0,this.stopwatch.totalTimeMs=0,this.stopwatch.timer=void 0,this.showStopwatchTime())},startStopwatch:function(e){this.stopwatch.totalTimeMs=1e3*fit20.sensors.leadInSeconds,this.stopwatch.startTime=isDefined(e)?e:Date.now(),this.stopwatch.timer=setInterval(this.showStopwatchTime,100),this.showStopwatchTime(),fit20.log(`⏱ stopwatch ${this.stopwatch.timer} started at ${this.stopwatch.startTime}+(${this.stopwatch.totalTimeMs}) = `+(this.stopwatch.startTime+this.stopwatch.totalTimeMs))},getStopwatchDuration:function(){var e=this.stopwatch;return Math.floor((e.startTime?Date.now()-e.startTime+e.totalTimeMs:e.totalTimeMs)/1e3)},showStopwatchTime:function(){var e=this.getStopwatchDuration();Vue.set(this.stopwatch,"display",showTime(e)),Vue.set(this.stopwatch,"countDown",e<0)},_primaryMemberPanel:function(){var e=!this.tabClosing&&isDefined(this.memberId)&&isDefined(this.primaryMember),t=e?this.$refs[this.primaryMemberPanelRef]:void 0;if(e&&isUndefined(t))fit20.log(`! Panel is undefined for primary member; ref = ${this.primaryMemberPanelRef}`),fit20.logServer(this.reportMemberPanelProblem("_primaryMemberPanel"),"member.js primaryMemberPanel",2);else{var i=e?isDefined(t):isUndefined(t);fit20.log(`* Panel is ${t?"set":"unset"} ${i?"OK":"KO"} for primary member; ref = ${this.primaryMemberPanelRef}; this.tabClosing = ${this.tabClosing}`)}return t},_duopartnerPanel:function(){var e=!this.tabClosing&&isDefined(this.memberId)&&isDefined(this.duoPartner),t=e?this.$refs[this.duopartnerPanelRef]:void 0;if(e&&isUndefined(t))fit20.log(`! Panel is undefined for duo partner; ref = ${this.duopartnerPanelRef}`),fit20.logServer(this.reportMemberPanelProblem("_duopartnerPanel"),"member.js duopartnerPanel",2);else{var i=e?isDefined(t):isUndefined(t);fit20.log(`* Panel is ${t?"set":"unset"} ${i?"OK":"KO"} for duo partner; ref = ${this.duopartnerPanelRef}; this.tabClosing = ${this.tabClosing}`)}return t},reportMemberPanelProblem:function(e){var t=this,i=`!! member-panel problem reported from ${e}.\n`;try{t.hasMember&&isUndefined(t.primaryMemberPanel)&&(i+=`!! No memberPanel is associated with the session of ${t.primaryMember.fullName} with primaryMemberPanelRef=${t.primaryMemberPanelRef}.\n`),t.hasDuoPartner&&isUndefined(t.duopartnerPanel)&&(i+=`!! No memberPanel is associated with the session of ${t.duoPartner.fullName} with duopartnerPanelRef=${t.duopartnerPanelRef}.\n`),i+=`!! Keys in $refs are [${Object.keys(this.$refs).join(", ")}]\n`}catch(e){i+=`!! Exception in reportMemberPanelProblem: ${e}\n`}return i}},computed:{currentStudio:function(){return fit20.store.state.currentStudio},primaryMemberPanelRef:function(){return"member_panel_"+(this.primaryMember?this.primaryMember.id:Math.random().toString())},duopartnerPanelRef:function(){return"member_panel_"+(this.duoPartner?this.duoPartner.id:Math.random().toString())},hasMember:function(){return isDefined(this.primaryMember)},hasDuoPartner:function(){return isDefined(this.duoPartner)},primaryMember:function(){return this.memberId&&fit20.store.state.members?fit20.store.state.members[this.memberId]:void 0},primaryMemberSessions:function(){return this.memberId&&fit20.store.state.memberSessions&&fit20.store.state.memberSessions[this.memberId]||[]},primaryMemberLastSession:function(){return this.primaryMemberSessions&&this.primaryMemberSessions.length>0?this.primaryMemberSessions[this.primaryMemberSessions.length-1]:void 0},primaryMemberActiveSession:function(){return this.primaryMember&&fit20.store.state.activeMemberSessions?fit20.store.state.activeMemberSessions[this.primaryMember.id]:void 0},duoPartner:function(){return this.primaryMember&&this.primaryMember.duoPartner&&fit20.store.state.members?fit20.store.state.members[this.primaryMember.duoPartner]:void 0},duoPartnerSessions:function(){return this.primaryMember&&this.primaryMember.duoPartner&&fit20.store.state.memberSessions&&fit20.store.state.memberSessions[this.primaryMember.duoPartner]||[]},duoPartnerLastSession:function(){return this.duoPartnerSessions&&this.duoPartnerSessions.length>0?this.duoPartnerSessions[this.duoPartnerSessions.length-1]:void 0},duoPartnerActiveSession:function(){return this.duoPartner&&fit20.store.state.activeMemberSessions?fit20.store.state.activeMemberSessions[this.duoPartner.id]:void 0},hasActiveSession:function(){var e=isDefined(this.primaryMemberActiveSession)||isDefined(this.duoPartnerActiveSession);return fit20.log(`* hasActiveSession = ${e} (${this.hasMember&&this.primaryMember.fullName}:${isDefined(this.primaryMemberActiveSession)} || ${this.hasDuoPartner&&this.duoPartner.fullName}:${isDefined(this.duoPartnerActiveSession)})`),e},hasSelectedExercise:function(){var e=isDefined(this.primaryMemberPanel&&this.primaryMemberPanel.selectedExercise)||isDefined(this.duopartnerPanel&&this.duopartnerPanel.selectedExercise);return fit20.log(`* hasSelectedExercise = ${e} (${this.hasMember&&this.primaryMember.fullName}: panel=${isDefined(this.primaryMemberPanel)} && exercise=${isDefined(this.primaryMemberPanel&&this.primaryMemberPanel.selectedExercise)} || ${this.hasDuoPartner&&this.duoPartner.fullName}: panel=${isDefined(this.duopartnerPanel)} && exercise=${isDefined(this.duopartnerPanel&&this.duopartnerPanel.selectedExercise)})`),e},runningExercises:function(){return(this.primaryMemberPanel&&this.primaryMemberPanel.isExerciseStarted?1:0)+(this.duopartnerPanel&&this.duopartnerPanel.isExerciseStarted?1:0)},startStopwatchAllowed:function(){return!(this.primaryMemberPanel&&this.primaryMemberPanel.isExerciseActive||this.duopartnerPanel&&this.duopartnerPanel.isExerciseActive)},trainer:function(){return fit20.app.userInfo.name}},mounted:function(){fit20.log(`* Mounting member panel for ${this.primaryMember.fullName} (${this.memberId})`);var e=this;e.canStartSession=!1,e.tabClosing=!1,e.memberId&&e.$nextTick((function(){fit20.memberStore.getDetails(e.memberId).then((function(){e.$nextTick((function(){e.primaryMemberPanel=e._primaryMemberPanel(),e.duopartnerPanel=e._duopartnerPanel(),e.tabClosing||(isDefined(e.memberId)&&isUndefined(e.primaryMemberPanel)&&(fit20.logServer(this.reportMemberPanelProblem("mounted/primaryMemberPanel"),"member.js duopartnerPanel",2),fit20.log("!! Member panel problem for primary member has been reported to server."),fit20.app.addAlert("error","M9111")),isDefined(e.duoPartner)&&isUndefined(e.duopartnerPanel)&&(fit20.logServer(this.reportMemberPanelProblem("mounted/duopartnerPanel"),"member.js duopartnerPanel",2),fit20.log("!! Member panel problem for duo partner has been reported to server."),fit20.app.addAlert("error","M9111")),e.canStartSession=!0)}))}))}))}},fit20.components.navigation={template:'\n    <nav class="navbar navbar-expand">\n      <div class="collapse navbar-collapse w-100">\n        <ul class="nav nav-pills">\n        \n          <li class="nav-item">\n            <a class="btn navbar-brand arrow-right" href="#studios" id="studios-tab" @click.stop.prevent="selectTab">\n            </a>\n          </li>\n          \n          <li class="nav-item">\n            <a class="btn btn-primary arrow align-middle"\n\t            @click.stop.prevent="selectTab"\n\t            id="members-tab" href="#members"\n              v-show="currentStudio"\n\t            :title="currentStudio ? currentStudio.id : \'\'"\n\t          >\n\t            <span v-if="currentStudio">\n                {{ currentStudio.name }}<br v-if="currentStudio.subName">{{ currentStudio.subName }}\n\t            </span>\n            </a>\n          </li>\n          \n          <li class="nav-item member-tab" v-for="member in currentMembers" :key="\'tab-\'+member.id">\n            <a class="btn btn-primary arrow text-white align-middle"\n               @click.stop.prevent="selectTab"\n               :id="\'member-tab-\'+member.id" :href="\'#member-tab-panel-\'+member.id"\n               :title="member.id"\n             >\n              <div>{{ member.fullName }}<div v-if="member.duoPartner">{{ memberName(member.duoPartner) }}</div></div>\n              <span class="badge badge-pill badge-danger" v-if="isInSession(member.id)"><i class="far fa-clock"></i></span>\n              <span class="badge badge-pill badge-danger" v-else="" @click.stop.prevent="forgetMemberId(member.id)"><i class="far fa-times"></i></span>\n            </a>\n          </li>\n          \n          <li class="nav-item" style="margin-left:-1.5em;">\x3c!-- spacer --\x3e</li>\n          \n          <li class="nav-item ml-auto">\n            <a class="btn btn-primary arrow-left text-primary align-middle ml-auto" style="width: 5em;"\n               @click.stop.prevent="selectTab"\n               id="helpdocs-tab" href="#helpdocs-tab-panel"\n               title="???"\n            >\n              <i class="far fa-question-circle h2 my-0"></i>\n            </a>\n          </li>\n          \n        </ul>\n      </div>\n    </nav>\n  ',props:["currentMembers","selectedTabHref"],computed:{currentStudio:function(){return fit20.store.state.currentStudio}},methods:{selectTab:function(e){e.preventDefault(),e.stopPropagation();var t=e.currentTarget.href;return t=t.substring(t.indexOf("#")),fit20.app.vue.selectTab(t),!1},activateTabPanel:function(){var e=$(this.$el).find(`.nav-item > a[href=\\${this.selectedTabHref}]`);$(this.$el).find(".nav-item>a").not(e).removeClass(["active"]),e.addClass(["active"])},forgetMemberId:function(e){event.preventDefault(),event.stopPropagation(),fit20.app.vue.forgetMemberId(e)},memberName:function(e){return fit20.store.state.members[e]?fit20.store.state.members[e].fullName:""},isInSession:function(e){return isDefined(e)?fit20.store.state.activeMemberSessions&&isDefined(fit20.store.state.activeMemberSessions[e]):fit20.store.state.activeMemberSessions&&Object.values(fit20.store.state.activeMemberSessions).some(isDefined)}},mounted:function(){this.activateTabPanel()},watch:{selectedTabHref:function(){this.activateTabPanel()}}},fit20.components.tabpanels={template:'\n    <main class="tab-content">\n\n      <div class="tab-pane fade show active" id="studios">\n        <studios></studios>\n      </div>\n\n      <div class="tab-pane fade" id="members" onactivate="activateStudio">\n        <members :ref="\'studio_members\'" :studio="currentStudio" :sensorconnect="sensorconnect"></members>\n      </div>\n\n      <div v-for="member in currentMembers"\n        :key="\'tabpanel-\'+member.id"\n        class="tab-pane fade" :id="\'member-tab-panel-\'+member.id"\n      >\n        \x3c!-- The ref is used to call functions like cancelSession. See ui.js. --\x3e\n        \x3c!-- See [https://vuejs.org/v2/api/#key] for the use of \':key\'. --\x3e\n        <member :key="member.id" :member-id="member.id" :ref="\'member_screen_\'+member.id"></member>\n      </div>\n\n      <div class="tab-pane fade" id="helpdocs-tab-panel">\n        <helpdocs></helpdocs>\n      </div>\n\n    </main>\x3c!-- .tab-content --\x3e\n  ',components:{studios:fit20.components.studios,members:fit20.components.members,member:fit20.components.member,helpdocs:fit20.components.helpdocs},props:["currentMembers","selectedTabHref"],computed:{currentStudio:function(){return fit20.store.state.currentStudio},sensorconnect:function(){return fit20.sensors&&fit20.sensors.sensorconnect}},methods:{activateTabPanel:function(){var e=$(this.selectedTabHref);$(this.$el).find(".tab-pane").not(e).removeClass(["show","active"]),e.addClass(["show","active"]);var t=e.attr("onactivate");t&&this[t]&&this[t]()},activateStudio:function(){}},mounted:function(){this.activateTabPanel()},watch:{selectedTabHref:function(){this.activateTabPanel()}}};