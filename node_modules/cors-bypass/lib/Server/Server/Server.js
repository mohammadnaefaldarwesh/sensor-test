"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../../constants");
var utils_1 = require("../../utils");
var ConnectedClient_1 = require("../ConnectedClient");
var Server = /** @class */ (function () {
    function Server(options) {
        if (options === void 0) { options = {}; }
        var _this = this;
        this.clients = new Map();
        this.params = new URLSearchParams(location.search);
        this.iframe = document.createElement('iframe');
        this.id = "" + location.href + Math.random()
            .toString(16)
            .substr(2, 8);
        this.handleEvent = function (topic, data, clientId) {
            if (!_this.clients.has(clientId))
                _this.clients.set(clientId, new ConnectedClient_1.ConnectedClient(_this, clientId));
            var client = _this.clients.get(clientId);
            console.groupCollapsed("Received %c" + topic, 'color: red');
            console.log('data', data);
            console.log('client', client);
            var handled = client.handleEvent(topic, data);
            console.log('handled', handled);
            console.groupEnd();
        };
        this.emit = function (topic, data, clientId) {
            var event = utils_1.makeValidEvent({
                topic: topic,
                to: clientId,
                from: _this.id,
                data: data
            });
            console.groupCollapsed("Emitted %c" + topic, 'color: orange');
            console.log('data', data);
            _this.iframe.contentWindow.postMessage(event, '*');
            console.groupEnd();
        };
        var _a = options.adapterUrl, adapterUrl = _a === void 0 ? this.params.get(constants_1.Params.adapterUrl) : _a;
        this.iframe.style.display = 'none';
        this.iframe.src = adapterUrl;
        document.body.appendChild(this.iframe);
        window.addEventListener('message', function (_a) {
            var data = _a.data;
            if (!utils_1.isValidEvent(data) || typeof data['topic'] !== 'string')
                return;
            if (data.to && data.to !== _this.id)
                return;
            var event = data;
            _this.handleEvent(event.topic, event.data, event.from);
        });
    }
    return Server;
}());
exports.Server = Server;
//# sourceMappingURL=Server.js.map